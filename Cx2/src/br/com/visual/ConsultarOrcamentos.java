/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.visual;

import br.com.controle.Controle;
import br.com.modelo.IteOrcamBean;
import br.com.modelo.OrcamentBean;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raul
 */
public class ConsultarOrcamentos extends javax.swing.JDialog {

    private final Controle controle = new Controle();
    private OrcamentBean orcamentBean = new OrcamentBean();
    List<OrcamentBean> listaOrcamentBean = new ArrayList<OrcamentBean>();
    List<IteOrcamBean> listaIteOrcamBean = new ArrayList<IteOrcamBean>();

    /**
     * Creates new form Movimentacao
     */
    public ConsultarOrcamentos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        ImageIcon icone = new javax.swing.ImageIcon(Constantes.SH_ICONE);
        setIconImage(icone.getImage());

        ftfPeriodoInicio.setText(Biblioteca.dataAtual(1));  //dd/mm/yyyy
        ftfPeriodoFim.setText(Biblioteca.dataAtual(1));  //dd/mm/yyyy

        //--------------------
        jLabel13.setText("");
        ftfPesquisar.setEnabled(false);
        formatarTabelaCab();
        formatarTabelaItens();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelPrincipal = new javax.swing.JPanel();
        tdbCabecalho = new javax.swing.JTabbedPane();
        panelFiltros = new javax.swing.JPanel();
        ftfPesquisar = new javax.swing.JFormattedTextField();
        comboConsultar = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        ftfPeriodoInicio = new javax.swing.JFormattedTextField();
        ftfPeriodoFim = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaOrcamentos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ftfCaixa = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ftfNumeroOrca = new javax.swing.JFormattedTextField();
        ftfNome = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ftfCpf = new javax.swing.JFormattedTextField();
        ftfCgc = new javax.swing.JFormattedTextField();
        ftfEndereco = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ftfDataVenda = new javax.swing.JFormattedTextField();
        ftfDataMov = new javax.swing.JFormattedTextField();
        ftfValor = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        ftfSituacao = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        panelBotoes = new javax.swing.JPanel();
        botaoCancelar = new javax.swing.JButton();
        botaoImprimirOrca = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tdbCabecalho.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movimentação de Orçamentos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 12))); // NOI18N
        tdbCabecalho.setPreferredSize(new java.awt.Dimension(1122, 700));
        tdbCabecalho.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tdbCabecalhoStateChanged(evt);
            }
        });

        panelFiltros.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtro da Consulta:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 11))); // NOI18N
        panelFiltros.setMinimumSize(new java.awt.Dimension(1024, 350));
        panelFiltros.setPreferredSize(new java.awt.Dimension(1024, 350));

        ftfPesquisar.setText(" ");
        ftfPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ftfPesquisarKeyPressed(evt);
            }
        });

        comboConsultar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Data", "Nome", "Cpf", "Cgc", "Orçamento" }));
        comboConsultar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboConsultarItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel1.setText("Pressione ENTER para consulta");

        jButton4.setText("Limpar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Consulta Ordenada");

        jRadioButton2.setText("Consulta \"Palavra Chave\"");

        jLabel2.setText("Periodo:");
        jLabel2.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel2.setPreferredSize(new java.awt.Dimension(50, 14));

        ftfPeriodoInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        ftfPeriodoInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ftfPeriodoInicio.setMinimumSize(new java.awt.Dimension(100, 30));
        ftfPeriodoInicio.setPreferredSize(new java.awt.Dimension(100, 30));

        ftfPeriodoFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        ftfPeriodoFim.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ftfPeriodoFim.setMinimumSize(new java.awt.Dimension(100, 30));
        ftfPeriodoFim.setPreferredSize(new java.awt.Dimension(100, 30));
        ftfPeriodoFim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ftfPeriodoFimKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 0));
        jLabel13.setText("jLabel13");
        jLabel13.setMinimumSize(new java.awt.Dimension(520, 14));
        jLabel13.setPreferredSize(new java.awt.Dimension(520, 14));

        tabelaOrcamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CX", "Código", "Nome", "CPF", "CGC", "Endereço", "Data", "Dt. Movimeto", "Valor", "Baixa Est."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaOrcamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaOrcamentosMouseClicked(evt);
            }
        });
        tabelaOrcamentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaOrcamentosKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaOrcamentos);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 991, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelFiltrosLayout = new javax.swing.GroupLayout(panelFiltros);
        panelFiltros.setLayout(panelFiltrosLayout);
        panelFiltrosLayout.setHorizontalGroup(
            panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltrosLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(91, 91, 91))
                    .addGroup(panelFiltrosLayout.createSequentialGroup()
                        .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFiltrosLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ftfPeriodoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ftfPeriodoFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFiltrosLayout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addGap(47, 47, 47)
                                .addComponent(jRadioButton2)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelFiltrosLayout.createSequentialGroup()
                        .addComponent(ftfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(panelFiltrosLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelFiltrosLayout.setVerticalGroup(
            panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltrosLayout.createSequentialGroup()
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfPeriodoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfPeriodoFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        tdbCabecalho.addTab("Movimentos de Vendas", panelFiltros);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da Venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 12))); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("CX:");
        jLabel3.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel3.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel3, gridBagConstraints);

        ftfCaixa.setEditable(false);
        ftfCaixa.setText(" ");
        ftfCaixa.setMinimumSize(new java.awt.Dimension(35, 30));
        ftfCaixa.setPreferredSize(new java.awt.Dimension(35, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfCaixa, gridBagConstraints);

        jLabel4.setText("Nº Venda:");
        jLabel4.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel4.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Nome:");
        jLabel5.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel5.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel5, gridBagConstraints);

        ftfNumeroOrca.setEditable(false);
        ftfNumeroOrca.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        ftfNumeroOrca.setText(" ");
        ftfNumeroOrca.setMinimumSize(new java.awt.Dimension(140, 30));
        ftfNumeroOrca.setPreferredSize(new java.awt.Dimension(140, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfNumeroOrca, gridBagConstraints);

        ftfNome.setEditable(false);
        ftfNome.setText(" ");
        ftfNome.setMinimumSize(new java.awt.Dimension(330, 30));
        ftfNome.setPreferredSize(new java.awt.Dimension(330, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfNome, gridBagConstraints);

        jLabel6.setText("CPF:");
        jLabel6.setMinimumSize(new java.awt.Dimension(30, 14));
        jLabel6.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel6, gridBagConstraints);

        jLabel7.setText("CGC:");
        jLabel7.setMaximumSize(new java.awt.Dimension(30, 14));
        jLabel7.setMinimumSize(new java.awt.Dimension(30, 14));
        jLabel7.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel7, gridBagConstraints);

        jLabel8.setText("End.:");
        jLabel8.setMaximumSize(new java.awt.Dimension(30, 14));
        jLabel8.setMinimumSize(new java.awt.Dimension(30, 14));
        jLabel8.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel8, gridBagConstraints);

        ftfCpf.setEditable(false);
        ftfCpf.setText(" ");
        ftfCpf.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfCpf.setPreferredSize(new java.awt.Dimension(280, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfCpf, gridBagConstraints);

        ftfCgc.setEditable(false);
        ftfCgc.setText(" ");
        ftfCgc.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfCgc.setPreferredSize(new java.awt.Dimension(280, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfCgc, gridBagConstraints);

        ftfEndereco.setEditable(false);
        ftfEndereco.setText(" ");
        ftfEndereco.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfEndereco.setPreferredSize(new java.awt.Dimension(280, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfEndereco, gridBagConstraints);

        jLabel9.setText("Dt Venda:");
        jLabel9.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel9.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel10.setText("Dt Mov.:");
        jLabel10.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel10.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel10, gridBagConstraints);

        jLabel11.setText("Valor.:");
        jLabel11.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel11.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel11, gridBagConstraints);

        ftfDataVenda.setEditable(false);
        ftfDataVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ftfDataVenda.setText(" ");
        ftfDataVenda.setMinimumSize(new java.awt.Dimension(150, 30));
        ftfDataVenda.setName(""); // NOI18N
        ftfDataVenda.setPreferredSize(new java.awt.Dimension(150, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfDataVenda, gridBagConstraints);

        ftfDataMov.setEditable(false);
        ftfDataMov.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ftfDataMov.setText(" ");
        ftfDataMov.setMinimumSize(new java.awt.Dimension(150, 30));
        ftfDataMov.setPreferredSize(new java.awt.Dimension(150, 30));
        ftfDataMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftfDataMovActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfDataMov, gridBagConstraints);

        ftfValor.setEditable(false);
        ftfValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftfValor.setText(" ");
        ftfValor.setMinimumSize(new java.awt.Dimension(150, 30));
        ftfValor.setPreferredSize(new java.awt.Dimension(150, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfValor, gridBagConstraints);

        jLabel12.setText("Situação:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel12, gridBagConstraints);

        ftfSituacao.setEditable(false);
        ftfSituacao.setText(" ");
        ftfSituacao.setMinimumSize(new java.awt.Dimension(35, 30));
        ftfSituacao.setPreferredSize(new java.awt.Dimension(35, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfSituacao, gridBagConstraints);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Und.", "Preco", "Quantidade", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        tdbCabecalho.addTab("Itens da Venda", jPanel2);

        jEditorPane1.setEditable(false);
        jScrollPane4.setViewportView(jEditorPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(639, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(364, Short.MAX_VALUE))
        );

        tdbCabecalho.addTab("Observação", jPanel1);

        panelBotoes.setPreferredSize(new java.awt.Dimension(0, 40));
        panelBotoes.setLayout(new java.awt.GridBagLayout());

        botaoCancelar.setText("Cancelar");
        botaoCancelar.setMaximumSize(new java.awt.Dimension(150, 30));
        botaoCancelar.setMinimumSize(new java.awt.Dimension(150, 30));
        botaoCancelar.setPreferredSize(new java.awt.Dimension(150, 30));
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelBotoes.add(botaoCancelar, gridBagConstraints);

        botaoImprimirOrca.setText("Imprimir Orçamento");
        botaoImprimirOrca.setMaximumSize(new java.awt.Dimension(150, 30));
        botaoImprimirOrca.setMinimumSize(new java.awt.Dimension(150, 30));
        botaoImprimirOrca.setPreferredSize(new java.awt.Dimension(150, 30));
        botaoImprimirOrca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoImprimirOrcaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelBotoes.add(botaoImprimirOrca, gridBagConstraints);

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tdbCabecalho, javax.swing.GroupLayout.DEFAULT_SIZE, 1041, Short.MAX_VALUE)
                    .addComponent(panelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tdbCabecalho, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ftfPesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftfPesquisarKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { //pressionou ENTER
            try {
                consultar();
            } catch (Exception ex) {
                Loggin.logDiarioExcecao(ex, true);
            }
        }
    }//GEN-LAST:event_ftfPesquisarKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        ftfPeriodoInicio.setText("");
        ftfPeriodoFim.setText("");
        ftfPesquisar.setText("");
        ftfPesquisar.requestFocus();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tabelaOrcamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaOrcamentosMouseClicked
        if (evt.getClickCount() == 2) {

        }
    }//GEN-LAST:event_tabelaOrcamentosMouseClicked

    private void tabelaOrcamentosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaOrcamentosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        }
    }//GEN-LAST:event_tabelaOrcamentosKeyPressed

    private void ftfDataMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftfDataMovActionPerformed

    }//GEN-LAST:event_ftfDataMovActionPerformed

    private void tdbCabecalhoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tdbCabecalhoStateChanged

        aoTrocarAbas();

    }//GEN-LAST:event_tdbCabecalhoStateChanged

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void comboConsultarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboConsultarItemStateChanged

        ftfPesquisar.setEnabled(true);
        ftfPesquisar.requestFocus();

        String textoLabel = "";
        Integer opcaoConsulta = comboConsultar.getSelectedIndex();
        switch (opcaoConsulta) {
            case 0: {//data
                textoLabel = "Informe no formato: dd/mm/yyyy";
                ftfPesquisar.setEnabled(false);
                ftfPeriodoInicio.requestFocus();
                ftfPeriodoInicio.selectAll();
            }
            break;
            case 1: {//nome
                textoLabel = "";
            }
            break;
            case 2: {//cpf
                textoLabel = "Informe apenas números";
            }
            break;
            case 3: {//cgc
                textoLabel = "Informe apenas números";
            }
            break;
            case 4: {//numero do orçamento
                textoLabel = "Informe apenas números";
            }
            break;
        }

        jLabel13.setText(textoLabel);
    }//GEN-LAST:event_comboConsultarItemStateChanged

    private void ftfPeriodoFimKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftfPeriodoFimKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { //pressionou ENTER
            try {

                if (comboConsultar.getSelectedIndex() != 0) {
                    ftfPesquisar.requestFocus();
                }

                consultar();
            } catch (Exception ex) {
                Loggin.logDiarioExcecao(ex, true);
            }
        }
    }//GEN-LAST:event_ftfPeriodoFimKeyPressed

    private void botaoImprimirOrcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoImprimirOrcaActionPerformed

        try {

            if (tabelaOrcamentos.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(null, "Selecione um orçamento!", Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
            String numCaixa = listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getCacodigo();
            Integer numOrca = listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getVdcodigo();

            //impressao da venda ---------------------------------------------
            Geral.imprimeOrcamento(numOrca);

        } catch (Exception ex) {
            Loggin.logDiarioExcecao(ex, true);
        }

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_botaoImprimirOrcaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            Loggin.logDiarioExcecao(ex, true);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ConsultarOrcamentos dialog = new ConsultarOrcamentos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoImprimirOrca;
    private javax.swing.JComboBox comboConsultar;
    private javax.swing.JFormattedTextField ftfCaixa;
    private javax.swing.JFormattedTextField ftfCgc;
    private javax.swing.JFormattedTextField ftfCpf;
    private javax.swing.JFormattedTextField ftfDataMov;
    private javax.swing.JFormattedTextField ftfDataVenda;
    private javax.swing.JFormattedTextField ftfEndereco;
    private javax.swing.JFormattedTextField ftfNome;
    private javax.swing.JFormattedTextField ftfNumeroOrca;
    private javax.swing.JFormattedTextField ftfPeriodoFim;
    private javax.swing.JFormattedTextField ftfPeriodoInicio;
    private javax.swing.JFormattedTextField ftfPesquisar;
    private javax.swing.JFormattedTextField ftfSituacao;
    private javax.swing.JFormattedTextField ftfValor;
    private javax.swing.JButton jButton4;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel panelBotoes;
    private javax.swing.JPanel panelFiltros;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTable tabelaOrcamentos;
    private javax.swing.JTabbedPane tdbCabecalho;
    // End of variables declaration//GEN-END:variables

    private void consultar() throws SQLException, ClassNotFoundException, IOException, Exception {

        Integer opcaoConsulta = comboConsultar.getSelectedIndex();
        Date periodoInicial = null;
        Date periodoFinal = null;
        if (ftfPeriodoInicio.getText() != null && !ftfPeriodoInicio.getText().isEmpty()) {
            periodoInicial = Biblioteca.stringToDate(2, ftfPeriodoInicio.getText().trim() + " 00:00:00");
        }

        if (ftfPeriodoFim.getText() != null && !ftfPeriodoFim.getText().isEmpty()) {
            periodoFinal = Biblioteca.stringToDate(2, ftfPeriodoFim.getText().trim() + " 23:59:59");
        }

        switch (opcaoConsulta) {
            case 0: {//data
                listaOrcamentBean = controle.listarOrcament(periodoInicial, periodoFinal);
            }
            break;
            case 1: {//nome

                if (periodoInicial == null && periodoFinal == null) {
                    if (jRadioButton1.isSelected()) {
                        listaOrcamentBean = controle.listarOrcament(ftfPesquisar.getText().trim() + "%");
                    } else {
                        listaOrcamentBean = controle.listarOrcament("%" + ftfPesquisar.getText().trim() + "%");
                    }
                } else {

                    if (periodoInicial == null) {
                        periodoInicial = periodoFinal;
                    } else if (periodoFinal == null) {
                        periodoFinal = periodoInicial;
                    }
                    //--------------------------------
                    if (jRadioButton1.isSelected()) {
                        listaOrcamentBean = controle.listarOrcament(periodoInicial, periodoFinal, ftfPesquisar.getText().trim() + "%");
                    } else {
                        listaOrcamentBean = controle.listarOrcament(periodoInicial, periodoFinal, "%" + ftfPesquisar.getText().trim() + "%");
                    }
                }
            }
            break;
            case 2: {//cpf
                if (ftfPesquisar.getText().isEmpty()) {
                    return;
                }

                if (periodoInicial == null && periodoFinal == null) {
                    listaOrcamentBean = controle.listarOrcamentoCpf(ftfPesquisar.getText().trim());
                } else {

                    if (periodoInicial == null) {
                        periodoInicial = periodoFinal;
                    } else if (periodoFinal == null) {
                        periodoFinal = periodoInicial;
                    }
                    //--------------------------------
                    listaOrcamentBean = controle.listarOrcamentoCpf(periodoInicial, periodoFinal, ftfPesquisar.getText().trim());
                }
            }
            break;
            case 3: {//cgc
                if (ftfPesquisar.getText().isEmpty()) {
                    return;
                }
                if (periodoInicial == null && periodoFinal == null) {
                    listaOrcamentBean = controle.listarOrcamentoCgc(ftfPesquisar.getText().trim());
                } else {

                    if (periodoInicial == null) {
                        periodoInicial = periodoFinal;
                    } else if (periodoFinal == null) {
                        periodoFinal = periodoInicial;
                    }

                    //--------------------------------
                    listaOrcamentBean = controle.listarOrcamentoCgc(periodoInicial, periodoFinal, ftfPesquisar.getText().trim());
                }
            }
            break;
            case 4: {//numero do orcamento

                if (ftfPesquisar.getText().isEmpty()) {
                    return;
                }
                orcamentBean = controle.Orcament(Integer.valueOf(ftfPesquisar.getText().trim()));

                listaOrcamentBean = new ArrayList<OrcamentBean>();
                if (orcamentBean != null) {
                    listaOrcamentBean.add(orcamentBean);
                }

            }
            break;
        }

        //-------------------------------------
        atualizarTabelaCab(listaOrcamentBean);
    }

    //=============================================================
    void atualizarTabelaCab(List<OrcamentBean> listaAuxiliarBean) {

        ((DefaultTableModel) tabelaOrcamentos.getModel()).setRowCount(0);
        if (listaAuxiliarBean != null && listaAuxiliarBean.size() > 0) {

            for (OrcamentBean o : listaAuxiliarBean) {
                Object[] linha = {
                    o.getCacodigo(),
                    o.getVdcodigo(),
                    o.getNome(),
                    o.getCpf(),
                    o.getCnpj(),
                    o.getEndereco(),
                    Biblioteca.dateToString(1, o.getData()),
                    Biblioteca.dateToString(2, o.getDatavalid()),
                    Biblioteca.formatarNumero(o.getValortot(), "#,###,##0.00"),
                    o.getSituacao(),};

                ((DefaultTableModel) tabelaOrcamentos.getModel()).addRow(linha);
            }

            tabelaOrcamentos.setRowSelectionInterval(0, 0); //da pau quando vazia
            tabelaOrcamentos.requestFocus();

            //rotina abaixo, após consulta o item pelo codigo de barra.
            //já deixa o sistema preparado para próxima consulta automatico,
            //sem que acha intervenção do usuario, desde que a consulta seja por codigo de barra
            //if (Caixa.configuracaoBean.getSegmentoMercado().equalsIgnoreCase("SUPERMERCADO")) {
            if (comboConsultar.getSelectedIndex() == 1) { //codigo barra
                ftfPesquisar.requestFocus();
                //tfPesquisar.selectAll();
                ftfPesquisar.setText("");
            }

        } else {

            ftfPesquisar.requestFocus();
            //tfPesquisar.selectAll();
            ftfPesquisar.setText("");
        }
    }

    //==============================================================
    void atualizarTabelaItem(List<IteOrcamBean> listaAuxiliarBean) {

        ((DefaultTableModel) jTable2.getModel()).setRowCount(0);
        if (listaAuxiliarBean != null && listaAuxiliarBean.size() > 0) {

            for (IteOrcamBean o : listaAuxiliarBean) {
                Object[] linha = {
                    o.getMfcodigo(),
                    o.getNome(),
                    o.getUncodigo(),
                    Biblioteca.formatarNumero(o.getValitem(), "#,###,##0.00"),
                    Biblioteca.formatarNumero(o.getQtditem(), "#,###,##0.00"),
                    Biblioteca.formatarNumero(o.getValitem(), "#,###,##0.00"),};

                ((DefaultTableModel) jTable2.getModel()).addRow(linha);
            }

            jTable2.setRowSelectionInterval(0, 0); //da pau quando vazia
            jTable2.requestFocus();
        }
    }

    //================================
    private void formatarTabelaCab() {

        /**
         * ******************************************************************
         **
         ********************************************************************
         */
        //tabelaItens.getTableHeader().setPreferredSize(new Dimension(1124, 25));
        tabelaOrcamentos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); //Para mostrar scroll vertical e horizontal: 
        //tabelaItens.getTableHeader().setFont(new java.awt.Font("Verdana", 0, 18));
        //tabelaItens.setFont(new java.awt.Font("Verdana", 0, 18));
        //tabelaItens.setAutoCreateRowSorter(true); //ORDENA AS COLUNAS DE UMA TABELA

        //o.getCacodigo(),
        tabelaOrcamentos.getColumnModel().getColumn(0).setMinWidth(10);
        tabelaOrcamentos.getColumnModel().getColumn(0).setMaxWidth(50);
        tabelaOrcamentos.getColumnModel().getColumn(0).setPreferredWidth(40);

        //o.getClcodigo(),
        //tabelaItens.getColumnModel().getColumn(1).setMinWidth(700);
        //tabelaItens.getColumnModel().getColumn(1).setMaxWidth(1100);
        tabelaOrcamentos.getColumnModel().getColumn(1).setPreferredWidth(80);

        //o.getNome(),
        tabelaOrcamentos.getColumnModel().getColumn(2).setMinWidth(100);
        tabelaOrcamentos.getColumnModel().getColumn(2).setMaxWidth(500);
        tabelaOrcamentos.getColumnModel().getColumn(2).setPreferredWidth(300);

        //o.getCpfclie(),
        tabelaOrcamentos.getColumnModel().getColumn(3).setMinWidth(100);
        tabelaOrcamentos.getColumnModel().getColumn(3).setMaxWidth(150);
        tabelaOrcamentos.getColumnModel().getColumn(3).setPreferredWidth(120);

        //o.getCgcclie(),
        tabelaOrcamentos.getColumnModel().getColumn(4).setMinWidth(100);
        tabelaOrcamentos.getColumnModel().getColumn(4).setMaxWidth(150);
        tabelaOrcamentos.getColumnModel().getColumn(4).setPreferredWidth(120);

        //o.getEndereco(),
        tabelaOrcamentos.getColumnModel().getColumn(5).setMinWidth(200);
        tabelaOrcamentos.getColumnModel().getColumn(5).setMaxWidth(300);
        tabelaOrcamentos.getColumnModel().getColumn(5).setPreferredWidth(250);

        //o.getData(),
        tabelaOrcamentos.getColumnModel().getColumn(6).setMinWidth(100);
        tabelaOrcamentos.getColumnModel().getColumn(6).setMaxWidth(100);
        tabelaOrcamentos.getColumnModel().getColumn(6).setPreferredWidth(100);

        //o.getDatadamov(),
        tabelaOrcamentos.getColumnModel().getColumn(7).setMinWidth(100);
        tabelaOrcamentos.getColumnModel().getColumn(7).setMaxWidth(200);
        tabelaOrcamentos.getColumnModel().getColumn(7).setPreferredWidth(120);

        //o.getValOrcamento(),
        tabelaOrcamentos.getColumnModel().getColumn(8).setMinWidth(100);
        tabelaOrcamentos.getColumnModel().getColumn(8).setMaxWidth(100);
        tabelaOrcamentos.getColumnModel().getColumn(8).setPreferredWidth(100);

        //o.getBaixaesto(),
        tabelaOrcamentos.getColumnModel().getColumn(9).setMinWidth(40);
        tabelaOrcamentos.getColumnModel().getColumn(9).setMaxWidth(80);
        tabelaOrcamentos.getColumnModel().getColumn(9).setPreferredWidth(70);

        //ajuste conteudo na celula
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();

        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);

        tabelaOrcamentos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        tabelaOrcamentos.getColumnModel().getColumn(1).setCellRenderer(direita);
        tabelaOrcamentos.getColumnModel().getColumn(2).setCellRenderer(esquerda);
        tabelaOrcamentos.getColumnModel().getColumn(3).setCellRenderer(esquerda);
        tabelaOrcamentos.getColumnModel().getColumn(4).setCellRenderer(esquerda);

        //-----------------
        tabelaOrcamentos.getColumnModel().getColumn(5).setCellRenderer(esquerda);
        tabelaOrcamentos.getColumnModel().getColumn(6).setCellRenderer(centralizado);
        tabelaOrcamentos.getColumnModel().getColumn(7).setCellRenderer(centralizado);
        tabelaOrcamentos.getColumnModel().getColumn(8).setCellRenderer(direita);
        tabelaOrcamentos.getColumnModel().getColumn(9).setCellRenderer(centralizado);

    }

    //==================================
    private void formatarTabelaItens() {

        /**
         * ******************************************************************
         **
         ********************************************************************
         */
        //jTable2.getTableHeader().setPreferredSize(new Dimension(1124, 25));
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); //Para mostrar scroll vertical e horizontal: 
        //jTable2.getTableHeader().setFont(new java.awt.Font("Verdana", 0, 18));
        //jTable2.setFont(new java.awt.Font("Verdana", 0, 18));
        //jTable2.setAutoCreateRowSorter(true); //ORDENA AS COLUNAS DE UMA TABELA

        //o.getMfcodigo(),
        jTable2.getColumnModel().getColumn(0).setMinWidth(10);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(100);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(100);

        //o.getNome(),
        jTable2.getColumnModel().getColumn(1).setMinWidth(100);
        jTable2.getColumnModel().getColumn(1).setMaxWidth(700);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(500);

        //o.getUncodigo(),
        jTable2.getColumnModel().getColumn(2).setMinWidth(10);
        jTable2.getColumnModel().getColumn(2).setMaxWidth(500);
        jTable2.getColumnModel().getColumn(2).setPreferredWidth(40);

        //o.getPrecoven()
        jTable2.getColumnModel().getColumn(3).setMinWidth(100);
        jTable2.getColumnModel().getColumn(3).setMaxWidth(150);
        jTable2.getColumnModel().getColumn(3).setPreferredWidth(120);

        //o.getQtd()
        jTable2.getColumnModel().getColumn(4).setMinWidth(100);
        jTable2.getColumnModel().getColumn(4).setMaxWidth(150);
        jTable2.getColumnModel().getColumn(4).setPreferredWidth(120);

        //o.getValitem()
        jTable2.getColumnModel().getColumn(5).setMinWidth(100);
        jTable2.getColumnModel().getColumn(5).setMaxWidth(150);
        jTable2.getColumnModel().getColumn(5).setPreferredWidth(120);

        //ajuste conteudo na celula
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();

        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);

        jTable2.getColumnModel().getColumn(0).setCellRenderer(direita);

        jTable2.getColumnModel().getColumn(1).setCellRenderer(esquerda);
        jTable2.getColumnModel().getColumn(2).setCellRenderer(esquerda);

        jTable2.getColumnModel().getColumn(3).setCellRenderer(direita);
        jTable2.getColumnModel().getColumn(4).setCellRenderer(direita);
        jTable2.getColumnModel().getColumn(5).setCellRenderer(direita);

    }

    private void aoTrocarAbas() {

        if (tabelaOrcamentos.getSelectedRow() < 0) {
            return;
        }

        try {
            Integer abaSelecionada = tdbCabecalho.getSelectedIndex();

            if (abaSelecionada == 1) { //aba consulta

                String caCodigo = listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getCacodigo();
                Integer orCodigo = listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getOrcodigo();

                ftfCaixa.setText(caCodigo);
                ftfSituacao.setText(listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getSituacao());
                ftfCpf.setText(listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getCpf());
                ftfDataVenda.setText(Biblioteca.dateToString(1, listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getData()));

                ftfNumeroOrca.setText(orCodigo.toString());
                ftfCgc.setText(listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getCnpj());
                ftfDataMov.setText(Biblioteca.dateToString(2, listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getData()));

                ftfNome.setText(listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getNome());
                ftfEndereco.setText(listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getEndereco());
                ftfValor.setText(Biblioteca.formatarNumero(listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getValortot(), "#,###,##0.00"));

                //--------------------------------------------------------------
                listaIteOrcamBean = controle.listarIteOrcam(orCodigo);

                atualizarTabelaItem(listaIteOrcamBean);

            } else if (abaSelecionada == 2) { //abar obs

                String a = listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getObserva1();
                String b = listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getObserva2();
                String c = listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getObserva3();

                String d = listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getObserva4();
                String e = listaOrcamentBean.get(tabelaOrcamentos.getSelectedRow()).getObserva5();

                a = a != null ? a : "";
                b = b != null ? b : "";
                c = c != null ? c : "";
                d = d != null ? d : "";
                e = e != null ? e : "";

                jEditorPane1.setText(a + "\n" + b + "\n" + c + "\n" + d + "\n" + e);

            }

        } catch (Exception ex) {
            Loggin.logDiarioExcecao(ex, true);
        }
    }

    private void cancelar() {
        dispose();
    }

}
