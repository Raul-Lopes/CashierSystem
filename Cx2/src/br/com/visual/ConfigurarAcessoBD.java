/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.visual;

import br.com.controle.Controle;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author WSI
 */
public class ConfigurarAcessoBD extends javax.swing.JDialog {

    private String fiscalIp, fiscalPorta, fiscalNomeBanco, fiscalSenha, fiscalUsuario;

    Controle controle = new Controle();

    /**
     * Creates new form AcessoBancoDados
     * @param parent
     * @param modal
     */
    public ConfigurarAcessoBD(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        ImageIcon icone = new javax.swing.ImageIcon(Constantes.SH_ICONE);
        setIconImage(icone.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelComponentes = new javax.swing.JPanel();
        panelServBotao = new javax.swing.JPanel();
        botaoServConexao = new javax.swing.JButton();
        panelCupomFiscal = new javax.swing.JPanel();
        labelFiscalIp = new javax.swing.JLabel();
        labelFiscalPorta = new javax.swing.JLabel();
        labelFisalBanco = new javax.swing.JLabel();
        labelFiscalUsuario = new javax.swing.JLabel();
        labelFiscalSenha = new javax.swing.JLabel();
        ftfFiscalIp = new javax.swing.JFormattedTextField();
        ftfFiscalPorta = new javax.swing.JFormattedTextField();
        ftfFiscalUsuario = new javax.swing.JFormattedTextField();
        ftfFiscalSenha = new javax.swing.JFormattedTextField();
        ftfFiscalNomeBanco = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(290, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        panelComponentes.setMinimumSize(new java.awt.Dimension(430, 255));
        panelComponentes.setPreferredSize(new java.awt.Dimension(430, 255));
        panelComponentes.setLayout(new java.awt.GridBagLayout());

        panelServBotao.setMinimumSize(new java.awt.Dimension(400, 35));
        panelServBotao.setPreferredSize(new java.awt.Dimension(400, 35));
        panelServBotao.setLayout(new java.awt.GridBagLayout());

        botaoServConexao.setText("Testar Conex√£o");
        botaoServConexao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoServConexaoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelServBotao.add(botaoServConexao, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        panelComponentes.add(panelServBotao, gridBagConstraints);

        panelCupomFiscal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acesso ao Fiscal", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 10))); // NOI18N
        panelCupomFiscal.setMinimumSize(new java.awt.Dimension(400, 180));
        panelCupomFiscal.setPreferredSize(new java.awt.Dimension(400, 180));
        panelCupomFiscal.setLayout(new java.awt.GridBagLayout());

        labelFiscalIp.setText("DNS / IP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(labelFiscalIp, gridBagConstraints);

        labelFiscalPorta.setText("Porta:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(labelFiscalPorta, gridBagConstraints);

        labelFisalBanco.setText("Nome Banco:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(labelFisalBanco, gridBagConstraints);

        labelFiscalUsuario.setText("Usuario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(labelFiscalUsuario, gridBagConstraints);

        labelFiscalSenha.setText("Senha:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(labelFiscalSenha, gridBagConstraints);

        ftfFiscalIp.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        ftfFiscalIp.setMinimumSize(new java.awt.Dimension(250, 25));
        ftfFiscalIp.setPreferredSize(new java.awt.Dimension(250, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(ftfFiscalIp, gridBagConstraints);

        ftfFiscalPorta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####"))));
        ftfFiscalPorta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftfFiscalPorta.setText("3050");
        ftfFiscalPorta.setMinimumSize(new java.awt.Dimension(250, 25));
        ftfFiscalPorta.setPreferredSize(new java.awt.Dimension(250, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(ftfFiscalPorta, gridBagConstraints);

        ftfFiscalUsuario.setText("root");
        ftfFiscalUsuario.setMinimumSize(new java.awt.Dimension(250, 25));
        ftfFiscalUsuario.setName(""); // NOI18N
        ftfFiscalUsuario.setPreferredSize(new java.awt.Dimension(250, 25));
        ftfFiscalUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftfFiscalUsuarioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(ftfFiscalUsuario, gridBagConstraints);

        ftfFiscalSenha.setMinimumSize(new java.awt.Dimension(250, 25));
        ftfFiscalSenha.setPreferredSize(new java.awt.Dimension(250, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(ftfFiscalSenha, gridBagConstraints);

        ftfFiscalNomeBanco.setMinimumSize(new java.awt.Dimension(250, 25));
        ftfFiscalNomeBanco.setPreferredSize(new java.awt.Dimension(250, 25));
        ftfFiscalNomeBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftfFiscalNomeBancoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelCupomFiscal.add(ftfFiscalNomeBanco, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        panelComponentes.add(panelCupomFiscal, gridBagConstraints);

        getContentPane().add(panelComponentes);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ftfFiscalNomeBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftfFiscalNomeBancoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftfFiscalNomeBancoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        sair();
    }//GEN-LAST:event_formWindowClosing

    private void botaoServConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoServConexaoActionPerformed
        TestarConexao("FISCAL");
    }//GEN-LAST:event_botaoServConexaoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            //ler o arquivo binario
            lerDadosAcesso();
        } catch (Exception ex) {
            Logger.getLogger(ConfigurarAcessoBD.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void ftfFiscalUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftfFiscalUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftfFiscalUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            Loggin.logDiarioExcecao(ex, true);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                ConfigurarAcessoBD dialog = new ConfigurarAcessoBD(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoServConexao;
    private javax.swing.JFormattedTextField ftfFiscalIp;
    private javax.swing.JFormattedTextField ftfFiscalNomeBanco;
    private javax.swing.JFormattedTextField ftfFiscalPorta;
    private javax.swing.JFormattedTextField ftfFiscalSenha;
    private javax.swing.JFormattedTextField ftfFiscalUsuario;
    private javax.swing.JLabel labelFisalBanco;
    private javax.swing.JLabel labelFiscalIp;
    private javax.swing.JLabel labelFiscalPorta;
    private javax.swing.JLabel labelFiscalSenha;
    private javax.swing.JLabel labelFiscalUsuario;
    private javax.swing.JPanel panelComponentes;
    private javax.swing.JPanel panelCupomFiscal;
    private javax.swing.JPanel panelServBotao;
    // End of variables declaration//GEN-END:variables

    private void TestarConexao(String modo) {

        String databaseURL, user, password, msn;
        java.sql.Driver driver;
        java.sql.Connection con = null;

        try {

            databaseURL = "jdbc:mysql://" + ftfFiscalIp.getText().trim() + ":" + ftfFiscalPorta.getText().trim() + "/" + ftfFiscalNomeBanco.getText().trim();
            user = ftfFiscalUsuario.getText().trim();
            password = ftfFiscalSenha.getText().trim();

            Class.forName("com.mysql.jdbc.Driver"); //carregar drive
            driver = java.sql.DriverManager.getDriver(databaseURL);
            con = java.sql.DriverManager.getConnection(databaseURL, user, password); //conexaco estabilizada
            java.sql.DatabaseMetaData dbMetaData = con.getMetaData();

            //--------------
            // Ok, let's query a driver/database capability
            if (dbMetaData.supportsTransactions()) {
                msn = "Transactions are supported.";
            } else {
                msn = "Transactions are not supported.";
            }

            JOptionPane.showMessageDialog(null, 
                    "Conex√£o com Banco OK!"
                    + "\n"
                    + "\n"
                    + "Mysql JDBC driver version: " + driver.getMajorVersion() + "." + driver.getMinorVersion() + " registered with driver manager."
                    + "\n"
                    + "\n" + msn,
                    Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ConfigurarAcessoBD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {

            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "N√£o foi poss√≠vel conectar ao banco!", Constantes.AVISO_SISTEMA, JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (con != null && !con.isClosed()) {
                    con.close();
                }
            } catch (SQLException ex) {
                Loggin.logDiarioExcecao(ex, true);
            }

        }

    }

    //==============================================
    private void lerDadosAcesso() throws Exception {

        //capturar dados de conexao com banco de dados em um arquivo com formato de texto.
        File f = new File("acesso.properties");
        if (f.exists()) {

            Properties arquivoAuxiliar = new Properties();
            arquivoAuxiliar.load(new FileInputStream(new File(System.getProperty("user.dir") + System.getProperty("file.separator") + "acesso.properties")));

            //fiscal
            fiscalIp = arquivoAuxiliar.getProperty("ip");
            fiscalPorta = arquivoAuxiliar.getProperty("porta");
            fiscalNomeBanco = arquivoAuxiliar.getProperty("banco");
            fiscalUsuario = arquivoAuxiliar.getProperty("usuario");
            fiscalSenha = arquivoAuxiliar.getProperty("senha");

            if (fiscalUsuario != null && !fiscalUsuario.isEmpty()) {
                fiscalUsuario = Biblioteca.Descriptografar(fiscalUsuario);
            }

            if (fiscalSenha != null && !fiscalSenha.isEmpty()) {
                fiscalSenha = Biblioteca.Descriptografar(fiscalSenha);
            }

            ftfFiscalIp.setText(fiscalIp.trim());
            ftfFiscalPorta.setText(fiscalPorta.trim());
            ftfFiscalNomeBanco.setText(fiscalNomeBanco.trim());
            ftfFiscalUsuario.setText(fiscalUsuario.trim());
            ftfFiscalSenha.setText(fiscalSenha.trim());

        }
    }

    //-------------------------------------
    private Boolean gravarArquivoAcesso() {

        Boolean tudoOk = false;
        // TODO add your handling code here:
        if (ftfFiscalIp.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo preenchimento obrigatorio.", Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);
            ftfFiscalIp.requestFocus();
            return tudoOk;
        } else if (ftfFiscalPorta.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo preenchimento obrigatorio.", Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);
            ftfFiscalPorta.requestFocus();
            return tudoOk;
        } else if (ftfFiscalNomeBanco.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo preenchimento obrigatorio.", Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);
            ftfFiscalNomeBanco.requestFocus();
            return tudoOk;
        } else if (ftfFiscalUsuario.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo preenchimento obrigatorio.", Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);
            ftfFiscalUsuario.requestFocus();
            return tudoOk;
        } else if (ftfFiscalSenha.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(this, "Campo preenchimento obrigatorio.", Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);
            //ftfFiscalSenha.requestFocus();
            //return tudoOk;
        }

        //-------------------------------------------------------
        fiscalIp = ftfFiscalIp.getText();
        fiscalPorta = ftfFiscalPorta.getText();
        fiscalNomeBanco = ftfFiscalNomeBanco.getText();
        fiscalUsuario = ftfFiscalUsuario.getText();
        fiscalSenha = ftfFiscalSenha.getText();

        fiscalUsuario = ftfFiscalUsuario.getText();
        fiscalSenha = ftfFiscalSenha.getText();

        fiscalUsuario = Biblioteca.Encriptar(fiscalUsuario);
        fiscalSenha = Biblioteca.Encriptar(fiscalSenha);

        try {

            //se nao tiver arquivo criar vazio
            File arquivoAcesso = new File(System.getProperty("user.dir") + System.getProperty("file.separator") + "acesso.properties");
            if (!arquivoAcesso.exists()) {
                FileWriter gravar;
                gravar = new FileWriter(arquivoAcesso);
                PrintWriter saida = new PrintWriter(gravar);
                saida.close();
            }

            //new File(System.getProperty("user.dir") + System.getProperty("file.separator") + "acesso.properties")
            Properties arquivoAuxiliar = new Properties();
            arquivoAuxiliar.load(new FileInputStream(arquivoAcesso));

            //setar valores
            arquivoAuxiliar.setProperty("ip", fiscalIp.trim());
            arquivoAuxiliar.setProperty("porta", fiscalPorta.trim());
            arquivoAuxiliar.setProperty("banco", fiscalNomeBanco.trim());
            arquivoAuxiliar.setProperty("usuario", fiscalUsuario.trim());
            arquivoAuxiliar.setProperty("senha", fiscalSenha.trim());

            FileOutputStream out = new FileOutputStream(arquivoAcesso);
            arquivoAuxiliar.store(out, "");
            tudoOk = true;

        } catch (IOException ex) {
        }

        return tudoOk;
    }

    //-------------------
    private void sair() {

        if (gravarArquivoAcesso()) {
            dispose();
        }

    }
}
