/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.visual;

import br.com.controle.Controle;
import br.com.modelo.ItPrVpdvBean;
import br.com.modelo.ItemVpdvBean;
import br.com.modelo.PreVdPdvBean;
import br.com.modelo.VendaPdvBean;
import static br.com.visual.Caixa.ConfiguracaoBean;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raul
 */
public class ConsultarVendas extends javax.swing.JDialog {

    private final Controle controle = new Controle();
    private VendaPdvBean vendaPdvBean = new VendaPdvBean();
    List<VendaPdvBean> listaVendaPdvBean = new ArrayList<VendaPdvBean>();
    List<ItemVpdvBean> listaItemVpdvBean = new ArrayList<ItemVpdvBean>();

    /**
     * Creates new form MovimentacaoVendas
     */
    public ConsultarVendas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        ImageIcon icone = new javax.swing.ImageIcon(Constantes.SH_ICONE);
        setIconImage(icone.getImage());

        ftfPeriodoInicio.setText(Biblioteca.dataAtual(1));  //dd/mm/yyyy
        ftfPeriodoFim.setText(Biblioteca.dataAtual(1));  //dd/mm/yyyy

        //--------------------
        jLabel13.setText("");
        ftfPesquisar.setEnabled(false);
        formatarTabelaCab();
        formatarTabelaItens();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelPrincipal = new javax.swing.JPanel();
        tdbCabecalho = new javax.swing.JTabbedPane();
        panelFiltros = new javax.swing.JPanel();
        ftfPesquisar = new javax.swing.JFormattedTextField();
        comboConsultar = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        ftfPeriodoInicio = new javax.swing.JFormattedTextField();
        ftfPeriodoFim = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaVendas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ftfCaixa = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ftfNumeroVenda = new javax.swing.JFormattedTextField();
        ftfNome = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ftfCpf = new javax.swing.JFormattedTextField();
        ftfCgc = new javax.swing.JFormattedTextField();
        ftfEndereco = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ftfDataVenda = new javax.swing.JFormattedTextField();
        ftfDataMov = new javax.swing.JFormattedTextField();
        ftfValor = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        ftfBaixaEst = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        panelBotoes = new javax.swing.JPanel();
        botaoCancelar = new javax.swing.JButton();
        botaoEmitirCupom = new javax.swing.JButton();
        botaoImprimirVenda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tdbCabecalho.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movimentação de Vendas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 12))); // NOI18N
        tdbCabecalho.setPreferredSize(new java.awt.Dimension(1122, 700));
        tdbCabecalho.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tdbCabecalhoStateChanged(evt);
            }
        });

        panelFiltros.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtro da Consulta:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 11))); // NOI18N
        panelFiltros.setMinimumSize(new java.awt.Dimension(1000, 350));
        panelFiltros.setPreferredSize(new java.awt.Dimension(1000, 350));

        ftfPesquisar.setText(" ");
        ftfPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ftfPesquisarKeyPressed(evt);
            }
        });

        comboConsultar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Data", "Nome", "Cpf", "Cgc", "Númeo da Venda" }));
        comboConsultar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboConsultarItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel1.setText("Pressione ENTER para consulta");

        jButton4.setText("Limpar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Consulta Ordenada");

        jRadioButton2.setText("Consulta \"Palavra Chave\"");

        jLabel2.setText("Periodo:");
        jLabel2.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel2.setPreferredSize(new java.awt.Dimension(50, 14));

        ftfPeriodoInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        ftfPeriodoInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ftfPeriodoInicio.setMinimumSize(new java.awt.Dimension(100, 30));
        ftfPeriodoInicio.setPreferredSize(new java.awt.Dimension(100, 30));

        ftfPeriodoFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        ftfPeriodoFim.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ftfPeriodoFim.setMinimumSize(new java.awt.Dimension(100, 30));
        ftfPeriodoFim.setPreferredSize(new java.awt.Dimension(100, 30));
        ftfPeriodoFim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ftfPeriodoFimKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 0));
        jLabel13.setText("jLabel13");
        jLabel13.setMinimumSize(new java.awt.Dimension(520, 14));
        jLabel13.setPreferredSize(new java.awt.Dimension(520, 14));

        tabelaVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CX", "Código", "Nome", "CPF", "CGC", "Endereço", "Data", "Dt. Movimeto", "Valor", "Baixa Est."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaVendasMouseClicked(evt);
            }
        });
        tabelaVendas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaVendasKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaVendas);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelFiltrosLayout = new javax.swing.GroupLayout(panelFiltros);
        panelFiltros.setLayout(panelFiltrosLayout);
        panelFiltrosLayout.setHorizontalGroup(
            panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltrosLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(81, 81, 81))
                    .addGroup(panelFiltrosLayout.createSequentialGroup()
                        .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFiltrosLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ftfPeriodoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ftfPeriodoFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFiltrosLayout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addGap(47, 47, 47)
                                .addComponent(jRadioButton2)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelFiltrosLayout.createSequentialGroup()
                        .addComponent(ftfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(panelFiltrosLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelFiltrosLayout.setVerticalGroup(
            panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltrosLayout.createSequentialGroup()
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfPeriodoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfPeriodoFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        tdbCabecalho.addTab("Movimentos de Vendas", panelFiltros);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da Venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 12))); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("CX:");
        jLabel3.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel3.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel3, gridBagConstraints);

        ftfCaixa.setEditable(false);
        ftfCaixa.setText(" ");
        ftfCaixa.setMinimumSize(new java.awt.Dimension(35, 30));
        ftfCaixa.setPreferredSize(new java.awt.Dimension(35, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfCaixa, gridBagConstraints);

        jLabel4.setText("Nº Venda:");
        jLabel4.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel4.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Nome:");
        jLabel5.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel5.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel5, gridBagConstraints);

        ftfNumeroVenda.setEditable(false);
        ftfNumeroVenda.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        ftfNumeroVenda.setText(" ");
        ftfNumeroVenda.setMinimumSize(new java.awt.Dimension(140, 30));
        ftfNumeroVenda.setPreferredSize(new java.awt.Dimension(140, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfNumeroVenda, gridBagConstraints);

        ftfNome.setEditable(false);
        ftfNome.setText(" ");
        ftfNome.setMinimumSize(new java.awt.Dimension(330, 30));
        ftfNome.setPreferredSize(new java.awt.Dimension(330, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfNome, gridBagConstraints);

        jLabel6.setText("CPF:");
        jLabel6.setMinimumSize(new java.awt.Dimension(30, 14));
        jLabel6.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel6, gridBagConstraints);

        jLabel7.setText("CGC:");
        jLabel7.setMaximumSize(new java.awt.Dimension(30, 14));
        jLabel7.setMinimumSize(new java.awt.Dimension(30, 14));
        jLabel7.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel7, gridBagConstraints);

        jLabel8.setText("End.:");
        jLabel8.setMaximumSize(new java.awt.Dimension(30, 14));
        jLabel8.setMinimumSize(new java.awt.Dimension(30, 14));
        jLabel8.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel8, gridBagConstraints);

        ftfCpf.setEditable(false);
        ftfCpf.setText(" ");
        ftfCpf.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfCpf.setPreferredSize(new java.awt.Dimension(280, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfCpf, gridBagConstraints);

        ftfCgc.setEditable(false);
        ftfCgc.setText(" ");
        ftfCgc.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfCgc.setPreferredSize(new java.awt.Dimension(280, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfCgc, gridBagConstraints);

        ftfEndereco.setEditable(false);
        ftfEndereco.setText(" ");
        ftfEndereco.setMinimumSize(new java.awt.Dimension(280, 30));
        ftfEndereco.setPreferredSize(new java.awt.Dimension(280, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfEndereco, gridBagConstraints);

        jLabel9.setText("Dt Venda:");
        jLabel9.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel9.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel10.setText("Dt Mov.:");
        jLabel10.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel10.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel10, gridBagConstraints);

        jLabel11.setText("Valor.:");
        jLabel11.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel11.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel11, gridBagConstraints);

        ftfDataVenda.setEditable(false);
        ftfDataVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ftfDataVenda.setText(" ");
        ftfDataVenda.setMinimumSize(new java.awt.Dimension(150, 30));
        ftfDataVenda.setName(""); // NOI18N
        ftfDataVenda.setPreferredSize(new java.awt.Dimension(150, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfDataVenda, gridBagConstraints);

        ftfDataMov.setEditable(false);
        ftfDataMov.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ftfDataMov.setText(" ");
        ftfDataMov.setMinimumSize(new java.awt.Dimension(150, 30));
        ftfDataMov.setPreferredSize(new java.awt.Dimension(150, 30));
        ftfDataMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftfDataMovActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfDataMov, gridBagConstraints);

        ftfValor.setEditable(false);
        ftfValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftfValor.setText(" ");
        ftfValor.setMinimumSize(new java.awt.Dimension(150, 30));
        ftfValor.setPreferredSize(new java.awt.Dimension(150, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfValor, gridBagConstraints);

        jLabel12.setText("Baixa Est:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(jLabel12, gridBagConstraints);

        ftfBaixaEst.setEditable(false);
        ftfBaixaEst.setText(" ");
        ftfBaixaEst.setMinimumSize(new java.awt.Dimension(35, 30));
        ftfBaixaEst.setPreferredSize(new java.awt.Dimension(35, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel3.add(ftfBaixaEst, gridBagConstraints);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Und.", "Preco", "Quantidade", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tdbCabecalho.addTab("Itens da Venda", jPanel2);

        jEditorPane1.setEditable(false);
        jScrollPane4.setViewportView(jEditorPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(615, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(352, Short.MAX_VALUE))
        );

        tdbCabecalho.addTab("Observação", jPanel1);

        panelBotoes.setPreferredSize(new java.awt.Dimension(0, 40));
        panelBotoes.setLayout(new java.awt.GridBagLayout());

        botaoCancelar.setText("Cancelar");
        botaoCancelar.setMaximumSize(new java.awt.Dimension(150, 30));
        botaoCancelar.setMinimumSize(new java.awt.Dimension(150, 30));
        botaoCancelar.setPreferredSize(new java.awt.Dimension(150, 30));
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelBotoes.add(botaoCancelar, gridBagConstraints);

        botaoEmitirCupom.setText("Emitir Cupom");
        botaoEmitirCupom.setMaximumSize(new java.awt.Dimension(150, 30));
        botaoEmitirCupom.setMinimumSize(new java.awt.Dimension(150, 30));
        botaoEmitirCupom.setPreferredSize(new java.awt.Dimension(150, 30));
        botaoEmitirCupom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEmitirCupomActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelBotoes.add(botaoEmitirCupom, gridBagConstraints);

        botaoImprimirVenda.setText("Imprimir Venda");
        botaoImprimirVenda.setMaximumSize(new java.awt.Dimension(150, 30));
        botaoImprimirVenda.setMinimumSize(new java.awt.Dimension(150, 30));
        botaoImprimirVenda.setPreferredSize(new java.awt.Dimension(150, 30));
        botaoImprimirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoImprimirVendaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelBotoes.add(botaoImprimirVenda, gridBagConstraints);

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tdbCabecalho, javax.swing.GroupLayout.DEFAULT_SIZE, 1017, Short.MAX_VALUE)
                    .addComponent(panelBotoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tdbCabecalho, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ftfPesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftfPesquisarKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { //pressionou ENTER
            try {
                consultar();
            } catch (Exception ex) {
                Loggin.logDiarioExcecao(ex, true);
            }
        }
    }//GEN-LAST:event_ftfPesquisarKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        ftfPeriodoInicio.setText("");
        ftfPeriodoFim.setText("");
        ftfPesquisar.setText("");
        ftfPesquisar.requestFocus();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tabelaVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaVendasMouseClicked
        if (evt.getClickCount() == 2) {

        }
    }//GEN-LAST:event_tabelaVendasMouseClicked

    private void tabelaVendasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaVendasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        }
    }//GEN-LAST:event_tabelaVendasKeyPressed

    private void ftfDataMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftfDataMovActionPerformed

    }//GEN-LAST:event_ftfDataMovActionPerformed

    private void tdbCabecalhoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tdbCabecalhoStateChanged

        aoTrocarAbas();

    }//GEN-LAST:event_tdbCabecalhoStateChanged

    private void botaoEmitirCupomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEmitirCupomActionPerformed

        try {

            if (tabelaVendas.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(null,
                        "Selecione uma venda!", Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            String[] opcoes = {"Sim", "Não"};
            Integer escolha = JOptionPane.showOptionDialog(this, "Deseja emitir cupom fiscal da venda?", Constantes.PERGUNTA_SISTEMA,
                    JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);

            if (escolha == 0) {

                setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
                Integer proximoIdPreVdPdvBean = controle.proximoId(ConfiguracaoBean.getNumeroCaixa(), "PreVdPdv");

                //-------------------------
                PreVdPdvBean cab = compoemPreVdPdvBean(proximoIdPreVdPdvBean);
                List<ItPrVpdvBean> itens = compoemItPrVpdvBean(proximoIdPreVdPdvBean);
                controle.emitirCupom(cab, itens);

                setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                JOptionPane.showMessageDialog(this, "Ok! Operação finalizada.", Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            Loggin.logDiarioExcecao(ex, true);
        }

    }//GEN-LAST:event_botaoEmitirCupomActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void comboConsultarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboConsultarItemStateChanged

        ftfPesquisar.setEnabled(true);
        ftfPesquisar.requestFocus();

        String textoLabel = "";
        Integer opcaoConsulta = comboConsultar.getSelectedIndex();
        switch (opcaoConsulta) {
            case 0: {//data
                textoLabel = "Informe no formato: dd/mm/yyyy";
                ftfPesquisar.setEnabled(false);
                ftfPeriodoInicio.requestFocus();
                ftfPeriodoInicio.selectAll();
            }
            break;
            case 1: {//nome
                textoLabel = "";
            }
            break;
            case 2: {//cpf
                textoLabel = "Informe apenas números";
            }
            break;
            case 3: {//cgc
                textoLabel = "Informe apenas números";
            }
            break;
            case 4: {//numero da venda
                textoLabel = "Informe apenas números";
            }
            break;
        }

        jLabel13.setText(textoLabel);
    }//GEN-LAST:event_comboConsultarItemStateChanged

    private void ftfPeriodoFimKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftfPeriodoFimKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { //pressionou ENTER
            try {

                if (comboConsultar.getSelectedIndex() != 0) {
                    ftfPesquisar.requestFocus();
                }

                consultar();
            } catch (Exception ex) {
                Loggin.logDiarioExcecao(ex, true);
            }
        }
    }//GEN-LAST:event_ftfPeriodoFimKeyPressed

    private void botaoImprimirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoImprimirVendaActionPerformed

        try {

            if (tabelaVendas.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(null,
                        "Selecione uma venda!", Constantes.AVISO_SISTEMA, JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
            String numCaixa = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getCacodigo();
            Integer numVenda = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getVdcodigo();

            //impressao da venda ---------------------------------------------
            Biblioteca.imprimeVenda(numCaixa, numVenda);

        } catch (Exception ex) {
            Loggin.logDiarioExcecao(ex, true);
        }

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_botaoImprimirVendaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            Loggin.logDiarioExcecao(ex, true);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ConsultarVendas dialog = new ConsultarVendas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoEmitirCupom;
    private javax.swing.JButton botaoImprimirVenda;
    private javax.swing.JComboBox comboConsultar;
    private javax.swing.JFormattedTextField ftfBaixaEst;
    private javax.swing.JFormattedTextField ftfCaixa;
    private javax.swing.JFormattedTextField ftfCgc;
    private javax.swing.JFormattedTextField ftfCpf;
    private javax.swing.JFormattedTextField ftfDataMov;
    private javax.swing.JFormattedTextField ftfDataVenda;
    private javax.swing.JFormattedTextField ftfEndereco;
    private javax.swing.JFormattedTextField ftfNome;
    private javax.swing.JFormattedTextField ftfNumeroVenda;
    private javax.swing.JFormattedTextField ftfPeriodoFim;
    private javax.swing.JFormattedTextField ftfPeriodoInicio;
    private javax.swing.JFormattedTextField ftfPesquisar;
    private javax.swing.JFormattedTextField ftfValor;
    private javax.swing.JButton jButton4;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel panelBotoes;
    private javax.swing.JPanel panelFiltros;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTable tabelaVendas;
    private javax.swing.JTabbedPane tdbCabecalho;
    // End of variables declaration//GEN-END:variables

    private void consultar() throws SQLException, ClassNotFoundException, IOException, Exception {

        Integer opcaoConsulta = comboConsultar.getSelectedIndex();
        Date periodoInicial = null;
        Date periodoFinal = null;
        if (ftfPeriodoInicio.getText() != null && !ftfPeriodoInicio.getText().isEmpty()) {
            periodoInicial = Biblioteca.stringToDate(2, ftfPeriodoInicio.getText().trim() + " 00:00:00");
        }

        if (ftfPeriodoFim.getText() != null && !ftfPeriodoFim.getText().isEmpty()) {
            periodoFinal = Biblioteca.stringToDate(2, ftfPeriodoFim.getText().trim() + " 23:59:59");
        }

        switch (opcaoConsulta) {
            case 0: {//data
                listaVendaPdvBean = controle.listarVendaPdv(periodoInicial, periodoFinal);
            }
            break;
            case 1: {//nome

                if (periodoInicial == null && periodoFinal == null) {
                    if (jRadioButton1.isSelected()) {
                        listaVendaPdvBean = controle.listarVendaPdv(ftfPesquisar.getText().trim() + "%");
                    } else {
                        listaVendaPdvBean = controle.listarVendaPdv("%" + ftfPesquisar.getText().trim() + "%");
                    }
                } else {

                    if (periodoInicial == null) {
                        periodoInicial = periodoFinal;
                    } else if (periodoFinal == null) {
                        periodoFinal = periodoInicial;
                    }
                    //--------------------------------
                    if (jRadioButton1.isSelected()) {
                        listaVendaPdvBean = controle.listarVendaPdv(periodoInicial, periodoFinal, ftfPesquisar.getText().trim() + "%");
                    } else {
                        listaVendaPdvBean = controle.listarVendaPdv(periodoInicial, periodoFinal, "%" + ftfPesquisar.getText().trim() + "%");
                    }
                }
            }
            break;
            case 2: {//cpf
                if (ftfPesquisar.getText().isEmpty()) {
                    return;
                }
                if (periodoInicial == null && periodoFinal == null) {
                    listaVendaPdvBean = controle.listarVendaPdvCpf(ftfPesquisar.getText().trim());
                } else {

                    if (periodoInicial == null) {
                        periodoInicial = periodoFinal;
                    } else if (periodoFinal == null) {
                        periodoFinal = periodoInicial;
                    }
                    //--------------------------------
                    listaVendaPdvBean = controle.listarVendaPdvCpf(periodoInicial, periodoFinal, ftfPesquisar.getText().trim());
                }
            }
            break;
            case 3: {//cgc
                if (ftfPesquisar.getText().isEmpty()) {
                    return;
                }
                if (periodoInicial == null && periodoFinal == null) {
                    listaVendaPdvBean = controle.listarVendaPdvCgc(ftfPesquisar.getText().trim());
                } else {

                    if (periodoInicial == null) {
                        periodoInicial = periodoFinal;
                    } else if (periodoFinal == null) {
                        periodoFinal = periodoInicial;
                    }
                    //--------------------------------
                    listaVendaPdvBean = controle.listarVendaPdvCgc(periodoInicial, periodoFinal, ftfPesquisar.getText().trim());
                }
            }
            break;
            case 4: {//numero da venda

                if (ftfPesquisar.getText().isEmpty()) {
                    return;
                }
                vendaPdvBean = controle.vendaPdv(Integer.valueOf(ftfPesquisar.getText().trim()));

                listaVendaPdvBean = new ArrayList<VendaPdvBean>();
                if (vendaPdvBean != null) {
                    listaVendaPdvBean.add(vendaPdvBean);
                }

            }
            break;
        }

        //-------------------------------------
        atualizarTabelaCab(listaVendaPdvBean);
    }

    //==============================================================
    void atualizarTabelaCab(List<VendaPdvBean> listaAuxiliarBean) {

        ((DefaultTableModel) tabelaVendas.getModel()).setRowCount(0);
        if (listaAuxiliarBean != null && listaAuxiliarBean.size() > 0) {

            for (VendaPdvBean o : listaAuxiliarBean) {
                Object[] linha = {
                    o.getCacodigo(),
                    o.getVdcodigo(),
                    o.getNome(),
                    o.getCpfclie(),
                    o.getCgcclie(),
                    o.getEndereco(),
                    Biblioteca.dateToString(1, o.getData()),
                    Biblioteca.dateToString(2, o.getDatadamov()),
                    Biblioteca.formatarNumero(o.getValvenda(), "#,###,##0.00"),
                    o.getBaixaesto(),};

                ((DefaultTableModel) tabelaVendas.getModel()).addRow(linha);
            }

            tabelaVendas.setRowSelectionInterval(0, 0); //da pau quando vazia
            tabelaVendas.requestFocus();

            //rotina abaixo, após consulta o item pelo codigo de barra.
            //já deixa o sistema preparado para próxima consulta automatico,
            //sem que acha intervenção do usuario, desde que a consulta seja por codigo de barra
            //if (Caixa.configuracaoBean.getSegmentoMercado().equalsIgnoreCase("SUPERMERCADO")) {
            if (comboConsultar.getSelectedIndex() == 1) { //codigo barra
                ftfPesquisar.requestFocus();
                //tfPesquisar.selectAll();
                ftfPesquisar.setText("");
            }

        } else {

            ftfPesquisar.requestFocus();
            //tfPesquisar.selectAll();
            ftfPesquisar.setText("");
        }
    }

    //==============================================================
    void atualizarTabelaItem(List<ItemVpdvBean> listaAuxiliarBean) {

        ((DefaultTableModel) jTable2.getModel()).setRowCount(0);
        if (listaAuxiliarBean != null && listaAuxiliarBean.size() > 0) {

            for (ItemVpdvBean o : listaAuxiliarBean) {
                Object[] linha = {
                    o.getMfcodigo(),
                    o.getNome(),
                    o.getUncodigo(),
                    Biblioteca.formatarNumero(o.getPrecoven(), "#,###,##0.00"),
                    Biblioteca.formatarNumero(o.getQtditem(), "#,###,##0.00"),
                    Biblioteca.formatarNumero(o.getValitem(), "#,###,##0.00"),};

                ((DefaultTableModel) jTable2.getModel()).addRow(linha);
            }

            jTable2.setRowSelectionInterval(0, 0); //da pau quando vazia
            jTable2.requestFocus();
        }
    }

    //================================
    private void formatarTabelaCab() {

        /**
         * ******************************************************************
         **
         ********************************************************************
         */
        //tabelaItens.getTableHeader().setPreferredSize(new Dimension(1124, 25));
        tabelaVendas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); //Para mostrar scroll vertical e horizontal: 
        //tabelaItens.getTableHeader().setFont(new java.awt.Font("Verdana", 0, 18));
        //tabelaItens.setFont(new java.awt.Font("Verdana", 0, 18));
        //tabelaItens.setAutoCreateRowSorter(true); //ORDENA AS COLUNAS DE UMA TABELA

        //o.getCacodigo(),
        tabelaVendas.getColumnModel().getColumn(0).setMinWidth(10);
        tabelaVendas.getColumnModel().getColumn(0).setMaxWidth(50);
        tabelaVendas.getColumnModel().getColumn(0).setPreferredWidth(40);

        //o.getClcodigo(),
        //tabelaItens.getColumnModel().getColumn(1).setMinWidth(700);
        //tabelaItens.getColumnModel().getColumn(1).setMaxWidth(1100);
        tabelaVendas.getColumnModel().getColumn(1).setPreferredWidth(80);

        //o.getNome(),
        tabelaVendas.getColumnModel().getColumn(2).setMinWidth(100);
        tabelaVendas.getColumnModel().getColumn(2).setMaxWidth(500);
        tabelaVendas.getColumnModel().getColumn(2).setPreferredWidth(300);

        //o.getCpfclie(),
        tabelaVendas.getColumnModel().getColumn(3).setMinWidth(100);
        tabelaVendas.getColumnModel().getColumn(3).setMaxWidth(150);
        tabelaVendas.getColumnModel().getColumn(3).setPreferredWidth(120);

        //o.getCgcclie(),
        tabelaVendas.getColumnModel().getColumn(4).setMinWidth(100);
        tabelaVendas.getColumnModel().getColumn(4).setMaxWidth(150);
        tabelaVendas.getColumnModel().getColumn(4).setPreferredWidth(120);

        //o.getEndereco(),
        tabelaVendas.getColumnModel().getColumn(5).setMinWidth(200);
        tabelaVendas.getColumnModel().getColumn(5).setMaxWidth(300);
        tabelaVendas.getColumnModel().getColumn(5).setPreferredWidth(250);

        //o.getData(),
        tabelaVendas.getColumnModel().getColumn(6).setMinWidth(100);
        tabelaVendas.getColumnModel().getColumn(6).setMaxWidth(100);
        tabelaVendas.getColumnModel().getColumn(6).setPreferredWidth(100);

        //o.getDatadamov(),
        tabelaVendas.getColumnModel().getColumn(7).setMinWidth(100);
        tabelaVendas.getColumnModel().getColumn(7).setMaxWidth(200);
        tabelaVendas.getColumnModel().getColumn(7).setPreferredWidth(120);

        //o.getValvenda(),
        tabelaVendas.getColumnModel().getColumn(8).setMinWidth(100);
        tabelaVendas.getColumnModel().getColumn(8).setMaxWidth(100);
        tabelaVendas.getColumnModel().getColumn(8).setPreferredWidth(100);

        //o.getBaixaesto(),
        tabelaVendas.getColumnModel().getColumn(9).setMinWidth(40);
        tabelaVendas.getColumnModel().getColumn(9).setMaxWidth(80);
        tabelaVendas.getColumnModel().getColumn(9).setPreferredWidth(70);

        //ajuste conteudo na celula
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();

        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);

        tabelaVendas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        tabelaVendas.getColumnModel().getColumn(1).setCellRenderer(direita);
        tabelaVendas.getColumnModel().getColumn(2).setCellRenderer(esquerda);
        tabelaVendas.getColumnModel().getColumn(3).setCellRenderer(esquerda);
        tabelaVendas.getColumnModel().getColumn(4).setCellRenderer(esquerda);

        //-----------------
        tabelaVendas.getColumnModel().getColumn(5).setCellRenderer(esquerda);
        tabelaVendas.getColumnModel().getColumn(6).setCellRenderer(centralizado);
        tabelaVendas.getColumnModel().getColumn(7).setCellRenderer(centralizado);
        tabelaVendas.getColumnModel().getColumn(8).setCellRenderer(direita);
        tabelaVendas.getColumnModel().getColumn(9).setCellRenderer(centralizado);

    }

    //==================================
    private void formatarTabelaItens() {

        /**
         * ******************************************************************
         **
         ********************************************************************
         */
        //jTable2.getTableHeader().setPreferredSize(new Dimension(1124, 25));
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); //Para mostrar scroll vertical e horizontal: 
        //jTable2.getTableHeader().setFont(new java.awt.Font("Verdana", 0, 18));
        //jTable2.setFont(new java.awt.Font("Verdana", 0, 18));
        //jTable2.setAutoCreateRowSorter(true); //ORDENA AS COLUNAS DE UMA TABELA

        //o.getMfcodigo(),
        jTable2.getColumnModel().getColumn(0).setMinWidth(10);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(100);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(100);

        //o.getNome(),
        jTable2.getColumnModel().getColumn(1).setMinWidth(100);
        jTable2.getColumnModel().getColumn(1).setMaxWidth(700);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(500);

        //o.getUncodigo(),
        jTable2.getColumnModel().getColumn(2).setMinWidth(10);
        jTable2.getColumnModel().getColumn(2).setMaxWidth(500);
        jTable2.getColumnModel().getColumn(2).setPreferredWidth(40);

        //o.getPrecoven()
        jTable2.getColumnModel().getColumn(3).setMinWidth(100);
        jTable2.getColumnModel().getColumn(3).setMaxWidth(150);
        jTable2.getColumnModel().getColumn(3).setPreferredWidth(120);

        //o.getQtd()
        jTable2.getColumnModel().getColumn(4).setMinWidth(100);
        jTable2.getColumnModel().getColumn(4).setMaxWidth(150);
        jTable2.getColumnModel().getColumn(4).setPreferredWidth(120);

        //o.getValitem()
        jTable2.getColumnModel().getColumn(5).setMinWidth(100);
        jTable2.getColumnModel().getColumn(5).setMaxWidth(150);
        jTable2.getColumnModel().getColumn(5).setPreferredWidth(120);

        //ajuste conteudo na celula
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();

        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);

        jTable2.getColumnModel().getColumn(0).setCellRenderer(direita);

        jTable2.getColumnModel().getColumn(1).setCellRenderer(esquerda);
        jTable2.getColumnModel().getColumn(2).setCellRenderer(esquerda);

        jTable2.getColumnModel().getColumn(3).setCellRenderer(direita);
        jTable2.getColumnModel().getColumn(4).setCellRenderer(direita);
        jTable2.getColumnModel().getColumn(5).setCellRenderer(direita);

    }

    private void aoTrocarAbas() {

        if (tabelaVendas.getSelectedRow() < 0) {
            return;
        }

        try {
            Integer abaSelecionada = tdbCabecalho.getSelectedIndex();

            if (abaSelecionada == 1) { //aba consulta

                String caCodigo = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getCacodigo();
                Integer vdCodigo = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getVdcodigo();

                ftfCaixa.setText(caCodigo);
                ftfBaixaEst.setText(listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getBaixaesto());
                ftfCpf.setText(listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getCpfclie());
                ftfDataVenda.setText(Biblioteca.dateToString(1, listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getData()));

                ftfNumeroVenda.setText(vdCodigo.toString());
                ftfCgc.setText(listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getCgcclie());
                ftfDataMov.setText(Biblioteca.dateToString(2, listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getDatadamov()));

                ftfNome.setText(listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getNomeclie());
                ftfEndereco.setText(listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getEndereco());
                ftfValor.setText(Biblioteca.formatarNumero(listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getValvenda(), "#,###,##0.00"));

                //----------------------------------
                listaItemVpdvBean = controle.listaItemVpdv(caCodigo, vdCodigo);

                atualizarTabelaItem(listaItemVpdvBean);

            } else if (abaSelecionada == 2) { //abar obs

                String a = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getObs1();
                String b = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getObs2();
                String c = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getObs3();

                String d = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getObs4();
                String e = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getObs5();
                String f = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getObs6();

                String g = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getObs7();
                String h = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getObs8();

                a = a != null ? a : "";
                b = b != null ? b : "";
                c = c != null ? c : "";
                d = d != null ? d : "";
                e = e != null ? e : "";
                f = f != null ? f : "";
                g = g != null ? g : "";
                h = h != null ? h : "";

                jEditorPane1.setText(a + "\n" + b + "\n" + c + "\n" + d + "\n" + e + "\n" + f + "\n" + g + "\n" + h);

            }

        } catch (Exception ex) {
            Loggin.logDiarioExcecao(ex, true);
        }
    }

    private PreVdPdvBean compoemPreVdPdvBean(Integer proximoIdPreVdPdvBean) throws Exception {

        vendaPdvBean = listaVendaPdvBean.get(tabelaVendas.getSelectedRow());

        //**********************************************    
        //Capa da Venda: (Tabela-VENDAPDV / PREVDPDV)
        //**********************************************
        //36 CLCODIGO2 N 9 Código aumentado do Cliente. (Para base com código de cliente com até 9 dígitos. Se vier preenchido será assumido como código do cliente) FK 603 611
        //37 CLCODPAI2 N 9 Código aumentado do Cliente Pai. (Para base com código de cliente com até 9 dígitos. Se vier preenchido será assumido como código do cliente) FK 612 620
        PreVdPdvBean preVdPdvBean = new PreVdPdvBean();
        preVdPdvBean.setVdcodigo(proximoIdPreVdPdvBean); //1 VDCODIGO N 8 Código da venda  S 1 8 
        preVdPdvBean.setCacodigo(vendaPdvBean.getCacodigo());//9 CACODIGO C 3 Código do caixa S 62 64
        preVdPdvBean.setSituacao("");
        preVdPdvBean.setStsproc("");
        preVdPdvBean.setCodsolicitfarma("");
        preVdPdvBean.setNumautorizacao("");
        preVdPdvBean.setMsgproc("");
        preVdPdvBean.setVdacacod("");
        preVdPdvBean.setVdavdcod(0);
        preVdPdvBean.setCafechpre("");
        preVdPdvBean.setNumeronf(0);
        preVdPdvBean.setSerienf("");
        preVdPdvBean.setPrecanc("");
        preVdPdvBean.setDatahoracup(vendaPdvBean.getDatahoracup());//71 DATAHORACUP C 14 Data - Hora cupom 1344 1357 
        preVdPdvBean.setData(vendaPdvBean.getData());//2 DATA D 8 Data da venda (ddmmaaaa) S 9 16 
        preVdPdvBean.setVendedor(vendaPdvBean.getVendedor());//3 VENDEDOR N 6 Código do vendedor S 17 22
        preVdPdvBean.setClcodigo(vendaPdvBean.getClcodigo());//4 CLCODIGO N 6 Código do cliente S 23 28
        preVdPdvBean.setNomeclie(vendaPdvBean.getNomeclie());//40 NOMECLIE C 50 Nome do Cliente 657 706
        preVdPdvBean.setCgcclie(vendaPdvBean.getCgcclie());//41 CGCCLIE C 14 CNPJ do Cliente 707 720
        preVdPdvBean.setCpfclie(vendaPdvBean.getCpfclie());//42 CPFCLIE C 11 CPF do Cliente 721 731                
        preVdPdvBean.setLimcrebai(vendaPdvBean.getLimcrebai());//72 LIMCREBAI N 16 2 Limite de crédito baixado 1358 1373
        preVdPdvBean.setLimcresec(vendaPdvBean.getLimcresec());//89 LIMCRESEC N 16 2 Limite de crédito SECUNDÁRIO baixado 1567 1582
        preVdPdvBean.setCodintern(vendaPdvBean.getCodintern());//15 CODINTERN C 20 Código interno do cliente 91 110         
        preVdPdvBean.setDesconto(vendaPdvBean.getDesconto());//5 DESCONTO N 10 2 Valor do desconto da venda S 29 38
        preVdPdvBean.setAcrescimo(vendaPdvBean.getAcrescimo());//6 ACRESCIMO N 10 2 Valor do acréscimo da venda S 39 48
        preVdPdvBean.setValvenda(vendaPdvBean.getValvenda());//7 VALVENDA N 10 2 Valor total da venda S 49 58
        preVdPdvBean.setEquipame(vendaPdvBean.getEquipame());//39 EQUIPAME N 6 Código da fatura 651 656
        preVdPdvBean.setMscodigo(vendaPdvBean.getMscodigo());//8 MSCODIGO C 3 Código da mesa 59 61 
        preVdPdvBean.setMecodigo(vendaPdvBean.getMecodigo());//35 MECODIGO C 9 Código da Cartela 594 602 
        preVdPdvBean.setDataamesa(vendaPdvBean.getDataamesa());//90 DATAAMESA D 14 Data da abertura da Mesa 1583 1596
        preVdPdvBean.setConfecfser(vendaPdvBean.getConfecfser());//91 CONFECFSER C 20 Reservado(não utilizado). 1597 1616
        preVdPdvBean.setConfeecf(vendaPdvBean.getConfeecf());//92 CONFEECF C 4 Reservado(não utilizado). 1617 1620
        preVdPdvBean.setConfecoo(0);//93 CONFECOO C 8 Reservado(não utilizado). 1621 1628
        preVdPdvBean.setConfecer(0);//94 CONFECER C 8 Reservado(não utilizado). 1629 1636
        preVdPdvBean.setFucodigo(vendaPdvBean.getFucodigo());//10 FUCODIGO N 6 Código do funcionário S 65 70        
        preVdPdvBean.setPeriodo(vendaPdvBean.getPeriodo());//11 PERIODO N 2 Período de venda S 71 72
        preVdPdvBean.setHorario(vendaPdvBean.getHorario());//12 HORARIO C 8 Horário da venda S 73 80
        preVdPdvBean.setEcfseque("  ");//44 ECFSEQUE C 4 Sequencial do ECF 745 748 
        preVdPdvBean.setEcfserie("X2");//45 ECFSERIE C 20 Número de Série do ECF 749 768 
        preVdPdvBean.setEcfmarca("");//46 ECFMARCA C 25 Marca do ECF 769 793 
        preVdPdvBean.setEcfmodelo("");//47 ECFMODELO C 25 Modelo do ECF 794 818
        preVdPdvBean.setEcftipo("");//48 ECFTIPO C 15 Tipo do ECF 819 833
        preVdPdvBean.setSwbversao(""); //49 SWVERSAO C 10 Versão do Software do ECF 834 843 
        preVdPdvBean.setSwbdthrgr(null);//50 SWBDTHRGR D 8 Data do Software do ECF 844 851 
        preVdPdvBean.setSwbmfadic("");//51 SWBMFADIC C 1 Adicional do Software do ECF 852 852         
        preVdPdvBean.setNumcupom(0);//13 NUMCUPOM C 8 Numero do cupom S 81 88 
        preVdPdvBean.setQtdpessoa(1);//73 QTDPESSOA N 6 Quantidade de pessoas de divisão do total da mesa 1374 1379 
        preVdPdvBean.setQtdcupent(0);//14 QTDCUPENT N 2 Quantidades de cupons de entrega 89 90 
        preVdPdvBean.setHorainic(vendaPdvBean.getHorainic());//16 HORAINIC C 8 Hora inicial da venda 111 118
        preVdPdvBean.setHorapagt(vendaPdvBean.getHorapagt()); //74 HORAPAGT C 8 Hora de Pagamento 1380 1387 
        preVdPdvBean.setDav(0);//43 DAV C 13 Número do DAV 732 744 
        preVdPdvBean.setNumorcam(""); //17 NUMORCAM C 6 Número do Orçamento S 119 124
        preVdPdvBean.setNome(vendaPdvBean.getNome());//18 NOME A 40 Nome do cliente 125 164
        preVdPdvBean.setEndereco(vendaPdvBean.getEndereco());//19 ENDEREÇO C 40 Endereço do cliente 165 204
        preVdPdvBean.setTelefone(vendaPdvBean.getTelefone());//20 TELEFONE C 18 Telefone do cliente 205 222
        preVdPdvBean.setDocumento("");//21 DOCUMENTO C 14 Número do documento do cliente 223 236
        preVdPdvBean.setNumerocoo(0);//22 NUMEROCOO N 8 Número do COO do cupom fiscal 237 244 
        preVdPdvBean.setObs1(vendaPdvBean.getObs1());//23 OBS1 C 40 Observação da venda 245 284
        preVdPdvBean.setObs2(vendaPdvBean.getObs2());//24 OBS2 C 40 Observação da venda 285 324 
        preVdPdvBean.setObs3(vendaPdvBean.getObs3());//25 OBS3 C 40 Observação da venda 325 364 
        preVdPdvBean.setObs4(vendaPdvBean.getObs4());//26 OBS4 C 40 Observação da venda 365 404 
        preVdPdvBean.setObs5(vendaPdvBean.getObs5());//27 OBS5 C 40 Observação da venda 405 444
        preVdPdvBean.setObs6(vendaPdvBean.getObs6());//28 OBS6 C 40 Observação da venda 445 484 
        preVdPdvBean.setObs7(vendaPdvBean.getObs7());//29 OBS7 C 40 Observação da venda 485 524
        preVdPdvBean.setObs8(vendaPdvBean.getObs8());//30 OBS8 C 40 Observação da venda 525 564 
        preVdPdvBean.setKm(0);//31 KM N 7 Quilometragem do veiculo 565 571
        preVdPdvBean.setPlaca("");//32 PLACA C 10 Placa do veiculo 572 581
        preVdPdvBean.setBaixaesto("");//75 BAIXAESTO C 1 Baixou estoque S/N 1388 1388 
        preVdPdvBean.setClcodpai(0);//33 CLCODPAI N 6 Código do cliente responsável pelo cliente desta venda 582 587
        preVdPdvBean.setFlagtrans("");
        preVdPdvBean.setFicodigo(0);//34 FICODIGO N 6 Código da filial (#) 588 593 
        preVdPdvBean.setKm(0);//31 KM N 7 Quilometragem do veiculo 565 571
        preVdPdvBean.setPlaca("");//32 PLACA C 10 Placa do veiculo 572 581
        preVdPdvBean.setBaixaesto(vendaPdvBean.getBaixaesto()); //75 BAIXAESTO C 1 Baixou estoque S/N 1388 1388 
        preVdPdvBean.setClcodpai(vendaPdvBean.getClcodpai());//33 CLCODPAI N 6 Código do cliente responsável pelo cliente desta venda 582 587
        preVdPdvBean.setFlagtrans(null);
        preVdPdvBean.setFacodigo(0);//76 FACODIGO N 8 Código da fatura 1389 1396 
        preVdPdvBean.setSetoruso(vendaPdvBean.getSetoruso());//38 SETORUSO C 30 Nome do Setor utilizado no Caixa 621 650 
        preVdPdvBean.setCentcusto(vendaPdvBean.getCentcusto()); //77 CENTCUSTO C 14 Código Centro Custo 1397 1410 
        preVdPdvBean.setPasembarque("");//52 PASEMBARQUE C 60 Campo para Segmento Passagem 853 912 
        preVdPdvBean.setPasembarque("");//52 PASEMBARQUE C 60 Campo para Segmento Passagem 853 912 
        preVdPdvBean.setPasdestino("");//53 PASDESTINO C 60 Campo para Segmento Passagem 913 972
        preVdPdvBean.setPaslinha("");//54 PASLINHA C 60 Campo para Segmento Passagem 973 1032
        preVdPdvBean.setPasagencia("");//55 PASAGENCIA C 60 Campo para Segmento Passagem 1033 1092 
        preVdPdvBean.setPasdata("");//56 PASDATA C 10 Campo para Segmento Passagem 1093 1102 
        preVdPdvBean.setPashora("");//57 PASHORA C 8 Campo para Segmento Passagem 1103 1110        
        preVdPdvBean.setPaspoltrona("");//58 PASPOLTRONA C 4 Campo para Segmento Passagem 1111 1114 
        preVdPdvBean.setPasplataforma("");//59 PASPLATAFORMA C 6 Campo para Segmento Passagem 1115 1120 
        preVdPdvBean.setPastipopassagem("");//60 PASTIPOPASSAGEM C 1 Campo para Segmento Passagem 1121 1121 
        preVdPdvBean.setPasrg("");//61 PASRG C 29 Campo para Segmento Passagem 1122 1150
        preVdPdvBean.setPasnome("");//62 PASNOME C 60 Campo para Segmento Passagem 1151 1210 
        preVdPdvBean.setPasendereco("");//63 PASENDERECO C 80 Campo para Segmento Passagem 1211 1290 
        preVdPdvBean.setPasufdestino(""); //64 PASUFDESTINO C 2 Campo para Segmento Passagem 1291 1292         
        preVdPdvBean.setPaspercurso(0);//65 PASPERCURSO N 6 Campo para Segmento Passagem 1293 1298 
        preVdPdvBean.setPastpvenda(0);//66 PASTPVENDA N 6 Campo para Segmento Passagem 1299 1304 
        preVdPdvBean.setPascodard(0);//68 PASCODARD N 8 Campo para Segmento Passagem 1330 1337 
        preVdPdvBean.setCodautoext("");//67 CODAUTOEXT C 25 Código de autorização externa 1305 1329 
        preVdPdvBean.setPasdestino("");//53 PASDESTINO C 60 Campo para Segmento Passagem 913 972
        preVdPdvBean.setPaslinha("");//54 PASLINHA C 60 Campo para Segmento Passagem 973 1032
        preVdPdvBean.setPasagencia("");//55 PASAGENCIA C 60 Campo para Segmento Passagem 1033 1092 
        preVdPdvBean.setPasdata("");//56 PASDATA C 10 Campo para Segmento Passagem 1093 1102 
        preVdPdvBean.setPashora("");//57 PASHORA C 8 Campo para Segmento Passagem 1103 1110  
        preVdPdvBean.setPaspoltrona("");//58 PASPOLTRONA C 4 Campo para Segmento Passagem 1111 1114 
        preVdPdvBean.setPasplataforma("");//59 PASPLATAFORMA C 6 Campo para Segmento Passagem 1115 1120 
        preVdPdvBean.setPastipopassagem("");//60 PASTIPOPASSAGEM C 1 Campo para Segmento Passagem 1121 1121 
        preVdPdvBean.setPasrg("");//61 PASRG C 29 Campo para Segmento Passagem 1122 1150 
        preVdPdvBean.setPasnome("");//62 PASNOME C 60 Campo para Segmento Passagem 1151 1210 
        preVdPdvBean.setPasendereco("");//63 PASENDERECO C 80 Campo para Segmento Passagem 1211 1290 
        preVdPdvBean.setPasufdestino("");//64 PASUFDESTINO C 2 Campo para Segmento Passagem 1291 1292 
        preVdPdvBean.setPaspercurso(0);//65 PASPERCURSO N 6 Campo para Segmento Passagem 1293 1298
        preVdPdvBean.setPastpvenda(0);//66 PASTPVENDA N 6 Campo para Segmento Passagem 1299 1304 
        preVdPdvBean.setPascodard(0);//68 PASCODARD N 8 Campo para Segmento Passagem 1330 1337 
        preVdPdvBean.setCodautoext("");//67 CODAUTOEXT C 25 Código de autorização externa 1305 1329 
        preVdPdvBean.setOrigem("MOVIM");//69 ORIGEM C 5 Origem da Venda 1338 1342 
        preVdPdvBean.setMultmesas("N");//70 MULTMESAS C 1 Fechamento multi mesas 1343 1343 
        preVdPdvBean.setPafindcanc("N");//78 PAFINDCANC C 1 Indicador de Cancelamento 1411 1411 
        preVdPdvBean.setModelodoc("2D");//79 MODELODOC C 3 Modelo do documento 1412 1414 
        preVdPdvBean.setPafhashver("4.01");//88 PAFHASHVER C 10 Versao do PAFECF 1557 1566
        preVdPdvBean.setPafhashcap("");//80 PAFHASHCAP C 32 Reservado(não utilizado). 1415 1446 
        preVdPdvBean.setVlrbcpis(0.0);//81 VLRBCPIS N 16 3 Reservado(não utilizado). 1447 1462
        preVdPdvBean.setValorpis(0.0);//82 VALORPIS N 16 3 Reservado(não utilizado). 1463 1478
        preVdPdvBean.setVlrpisst(0.0);//83 VLRPISST N 16 3 Reservado(não utilizado). 1479 1494
        preVdPdvBean.setVlrbccfs(0.0);//84 VLRBCCFS N 16 3 Reservado(não utilizado). 1495 1510
        preVdPdvBean.setValorcfs(0.0);//85 VALORCFS N 16 3 Reservado(não utilizado). 1511 1526 
        preVdPdvBean.setVlrcfsst(0.0);//86 VLRCFSST N 16 3 Reservado(não utilizado). 1527 1542
        preVdPdvBean.setDatadamov(new java.util.Date());//87 DATADAMOV C 14 Data da Movimentação da ECF 1543 1556

        return preVdPdvBean;
    }

    private List<ItPrVpdvBean> compoemItPrVpdvBean(Integer proximoIdPreVdPdvBean) throws Exception {

        String caCodigo = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getCacodigo();
        Integer vdCodigo = listaVendaPdvBean.get(tabelaVendas.getSelectedRow()).getVdcodigo();
        List<ItemVpdvBean> listaItens = controle.listaItemVpdv(caCodigo, vdCodigo);

        //----------------------------------
        List<ItPrVpdvBean> listaItPrVpdvBean = new ArrayList<ItPrVpdvBean>();
        ItPrVpdvBean itPrVpdvBean;

        //************************************************
        //informar numero da venda para os itens
        //************************************************
        for (ItemVpdvBean o : listaItens) {

            itPrVpdvBean = new ItPrVpdvBean();

            //********************************************
            //Itens da Venda: (Tabela-ITEMVPDV / ITPRVPDV)
            //********************************************
            //13 NOME C 40 Descrição do Produto S 110 149    
            //20 CFCODIGO C 1 Reservado S 169 169            
            //30 QTDESTOQU N 16 6 Quantidade em estoque do produto 258 273           
            //45 HORACOMA C 6 Hora de Emissão da Comanda 531 536        
            //80 Reservado C 32 Reservado 895 926        
            //85 VLRVALORCFSPISST N 16 3 Valor da ST do Pis 978 993        
            itPrVpdvBean.setVdcodigo(proximoIdPreVdPdvBean);//1 VDCODIGO N 8 Código da venda S 1 8 
            itPrVpdvBean.setNumitem(o.getNumitem());//2 NUMITEM N 3 Numero do item da venda S 9 11 
            itPrVpdvBean.setCacodigo(o.getCacodigo());//35 CACODIGO C 3 Código do caixa 390 392
            itPrVpdvBean.setMfcodigo(o.getMfcodigo());//3 MFCODIGO C 13 Código do produto S 12 24 
            itPrVpdvBean.setPlcodigo(o.getPlcodigo());//4 PLCODIGO C 10 Código do plano de contas 25 34
            itPrVpdvBean.setQtditem(o.getQtditem());//5 QTDITEM N 10 3 Quantidade do item S 35 44 
            itPrVpdvBean.setValitem(o.getValitem());//6 VALITEM N 10 2 Valor do total do item S 45 54
            itPrVpdvBean.setFucodigo(o.getFucodigo());//7 FUCODIGO N 6 Código do funcionário 55 60
            itPrVpdvBean.setFucodlan(o.getFucodlan());//74 FUCODLAN N 6 Garçom que realizou o pedido do item 853 858        
            itPrVpdvBean.setFucoddes(o.getFucoddes());//59 FUCODDES C 6 Identificação do Funcionário que deu o desconto 641 646  
            itPrVpdvBean.setSeqtotecf(o.getSeqtotecf());//91 SEQTOTECF C 2 Sequencial do Totalizador na ECF 1061 1062         
            itPrVpdvBean.setAliqicms(o.getAliqicms());//8 ALIQICMS N 4 2 Alíquota de ICMS S 61 64 
            itPrVpdvBean.setCodtrib(o.getCodtrib());//9 CODTRIB C 1 Código de tributação S 65 65 
            itPrVpdvBean.setDesctrib(o.getDesctrib());//60 DESCTRIB C 3 Descrição da Tributação 647 649 
            itPrVpdvBean.setNumdocum(o.getNumdocum());//10 NUMDOC C 15 Número do documento S 66 80 
            itPrVpdvBean.setPrcunit(o.getPrcunit());//11 PRCUNIT N 16 3 Preço unitário do item S 81 96 
            itPrVpdvBean.setPrecosubpc(0.0);
            itPrVpdvBean.setPrecosubms(0.0);
            itPrVpdvBean.setMmfcodigo(o.getMmfcodigo());//12 MMFCODIGO C 13 Código do Produto Para Venda S 97 109 
            itPrVpdvBean.setNome(o.getNome());//42 NOME C 64 Nome do material completo 458 521     
            itPrVpdvBean.setUncodigo(o.getUncodigo());//14 UNCODIGO C 2 Código da Unidade S 150 151 
            itPrVpdvBean.setPrecoven(o.getPrecoven());//15 PRECOVEN N 10 2 Preço de Venda Do Produto S 152 161 
            itPrVpdvBean.setMaliqicms(o.getMaliqicms());//16 MALIQICMS N 4 2 Alíquota de ICMS S 162 165
            itPrVpdvBean.setCodorige(o.getCodorige());//17 CODORIGE C 1 Código de Origem Do Produto S 166 166 
            itPrVpdvBean.setMcodtrib(o.getMcodtrib());//18 MCODTRIB C 1 Código de Tributação S 167 167 
            itPrVpdvBean.setPesavel(o.getPesavel());//19 PESAVEL C 1 Produto Pesável (S - Sim / N - Não) S 168 168    
            itPrVpdvBean.setAliqipi(o.getAliqipi());//21 ALIQIPI N 4 2 Alíquota de IPI S 170 173  
            itPrVpdvBean.setCodextra(o.getCodextra());//22 CODEXTRA C 13 Código do Produto com Suporte Físico (Extra) 174 186       
            itPrVpdvBean.setReferenci(o.getReferenci());//23 REFERENCI C 20 Código de Referencia do Produto 187 206      
            itPrVpdvBean.setGrade(o.getGrade());//24 GRADE C 11 Grade de Tamanho do Produto 207 217        
            itPrVpdvBean.setCor(o.getCor());//25 COR C 10 Código Cor do Produto 218 227         
            itPrVpdvBean.setTamanho(o.getTamanho());//26 TAMANHO C 6 Tamanho do Produto 228 233      
            itPrVpdvBean.setCodintern(o.getCodintern());//27 CODINTERN C 13 Código Interno no Sistema de Retaguarda 234 246        
            itPrVpdvBean.setTipotribu(o.getTipotribu());//28 TIPOTRIB C 1 Tipo de Tributação: (P - Produto / S - Serviço) S 247 247       
            itPrVpdvBean.setPrecoven1(o.getPrecoven1());//29 PRECOVEN1 N 10 3 Preço de Venda com 3 casas decimais (Se preenchido será assumido como o preço de venda) 248 257        
            itPrVpdvBean.setQtdestoq(o.getQtdestoq());
            itPrVpdvBean.setPathfoto(o.getPathfoto());//31 PATHFOTO C 80 Caminho onde o sistema buscará a foto do produto 274 353        
            itPrVpdvBean.setAgcodigo(o.getAgcodigo());//32 AGCODIGO C 16 Agrupamento do produto 354 369
            itPrVpdvBean.setExcluido(o.getExcluido());//101 EXCLUIDO C 1 Se o item foi excluído 1171 1171
            itPrVpdvBean.setFlagtrans(o.getFlagtrans());
            itPrVpdvBean.setDeprotot(o.getDeprotot());//33 DEPROTOT N 10 2 Valor do rateio do desconto da venda para este item 370 379
            itPrVpdvBean.setAcprotot(o.getAcprotot());//34 ACPROTOT N 10 2 Valor do rateio do acréscimo da venda para este item 380 389         
            itPrVpdvBean.setComposto(o.getComposto());//36 COMPOSTO C 1 Produto Composto 393 393         
            itPrVpdvBean.setCacodori(o.getCacodori());//37 CACODORI C 3 Caixa de Origem 394 396    
            itPrVpdvBean.setSetorori(o.getSetorori());//38 SETORORI C 30 Setor de origem 397 426         
            itPrVpdvBean.setCodrecei(o.getCodrecei());//39 CODRECEI C 13 Código da receita 427 439         
            itPrVpdvBean.setHorarece(o.getHorarece());//40 HORARECE C 8 Hora da receita 440 447         
            itPrVpdvBean.setQtdrecei(o.getQtdrecei());//41 QTDRECEI N 10 3 Quantidade da receita 448 457

            itPrVpdvBean.setComandaok(o.getComandaok());//43 COMANDAOK C 1 Se a comanda finalizou OK 522 522
            itPrVpdvBean.setDatacoma(o.getDatacoma());//44 DATACOMA D 8 Data de Emissão da Comanda 523 530         
            itPrVpdvBean.setTipofab(o.getTipofab());//46 TIPOFAB C 1 Tipo de Propriedade P-própria/T-terceiros 537 537  
            itPrVpdvBean.setIat(o.getIat());//47 IAT C 1 Índice de Arredondamento ou Truncamento 538 538        
            itPrVpdvBean.setMesaoritr(o.getMesaoritr());//48 MESAORITR C 8 Número da Mesa de Origem 539 546 
            itPrVpdvBean.setMbcodigo(o.getMbcodigo());//49 MBCODIGO C 8 Código do Item de movimentação da Tabela MoviBico 547 554
            itPrVpdvBean.setTqcodigo(o.getTqcodigo());//50 TQCODIGO C 3 Código do Tanque 555 557    
            itPrVpdvBean.setBmcodigo(o.getBmcodigo());//51 BMCODIGO C 3 Código da Bomba 558 560     
            itPrVpdvBean.setBicodigo(o.getBicodigo());//52 BICODIGO C 6 Código do Bico 561 566  
            itPrVpdvBean.setDescbico(o.getDescbico());//53 DESCBICO C 6 Descrição do Bico 567 572 
            itPrVpdvBean.setEncinici(o.getEncinici());//54 ENCINICi N 16 3 Encerrante Inicial 573 588         
            itPrVpdvBean.setEncfinal(o.getEncfinal());//55 ENCFINAL N 16 3 Encerrante Final 589 604
            itPrVpdvBean.setCartaopas(o.getCartaopas());//56 CARTAOPAS C 20 Cartão de Passagem 605 624         

            itPrVpdvBean.setPosimesa(o.getPosimesa());//57 POSIMESA C 10 Posição da mesa 625 634
            itPrVpdvBean.setCvcodigo(o.getCvcodigo());//58 CVCODIGO C 6 Código do Convênio 635 640   
            itPrVpdvBean.setVaspartida(o.getVaspartida());//61 VASPARTIDA C 10 Dados da Vacina 650 659 
            itPrVpdvBean.setVasvencime(o.getVasvencime());//62 VASVENCIME C 7 Dados da Vacina 660 666      
            itPrVpdvBean.setVastipo(o.getVastipo());//63 VASTIPO C 20 Dados da Vacina 667 686
            itPrVpdvBean.setVasfocodig(o.getVasfocodig());//64 VASFOCODIG N 8 Dados da Vacina 687 694      
            itPrVpdvBean.setVascodprod(o.getVascodprod());//65 VASCODPROD C 15 Dados da Vacina 695 709   
            itPrVpdvBean.setVasnomecid(o.getVasnomecid());//66 VASNOMECID C 50 Dados da Vacina 710 759         
            itPrVpdvBean.setOrigem(o.getOrigem());//67 ORIGEM C 5 Origem da Venda 760 764        
            itPrVpdvBean.setMecodigo(o.getMecodigo());//68 MECODIGO N 8 Código da Mesa 765 772        
            itPrVpdvBean.setPrecocus(o.getPrecocus());//69 PRECOCUS N 16 6 Preço de custo 773 788        
            itPrVpdvBean.setPrccumed(o.getPrccumed());//70 PRCCUMED N 16 6 Preço de custo Medio 789 804        
            itPrVpdvBean.setPrccucon(o.getPrccucon());//71 PRCCUCON N 16 6 Preço de custo contábil 805 820        
            itPrVpdvBean.setPrccumec(o.getPrccumec());//72 PRCCUMEC N 16 6 Preço de custo Medio Contábil 821 836
            itPrVpdvBean.setPrecoref(o.getPrecoref());//73 PRECOREF N 16 6 Preço de referência 837 852        
            itPrVpdvBean.setEcfserie(o.getEcfserie());//75 ECFSERIE C 20 Numero de serie da ecf 859 878         
            itPrVpdvBean.setNumerocoo(o.getNumerocoo());//76 NUMEROCOO N 6 Numero do COO 879 884        
            itPrVpdvBean.setNumcupom(o.getNumcupom());//77 NUMCUPOM N 6 Numero do Cupom 885 890         
            itPrVpdvBean.setPafindcanc(o.getPafindcanc());//78 PAFINDCANC C 1 Indicador de cancelamento 891 891        
            itPrVpdvBean.setModelodoc(o.getModelodoc());//79 MODELODOC C 3 Modelo do documento 892 894          
            itPrVpdvBean.setPafhashver(o.getPafhashver());//102 PAFHASHVER C 10 Versao do PAFECF 1172 1181        
            itPrVpdvBean.setPafhashdet(o.getPafhashdet());

            itPrVpdvBean.setCstpis(o.getCstpis());//81 CSTPIS C 3 CST do Pis 927 929         
            itPrVpdvBean.setVlrbcpis(o.getVlrbcpis());//82 VLRBCPIS N 16 3 Valor da Base do Pis 930 945         
            itPrVpdvBean.setAliqpis(o.getAliqpis());//83 ALIQPIS N 16 3 Aliquota de Pis 946 961         
            itPrVpdvBean.setValorpis(o.getValorpis());//84 VALORPIS N 16 3 Valor do Pis 962 977         
            itPrVpdvBean.setVlrpisst(o.getVlrpisst());
            itPrVpdvBean.setCstcofin(o.getCstcofin());//86 CSTCOFIN C 3 CST do Cofins 994 996          

            itPrVpdvBean.setVlrbccfs(o.getVlrbccfs());//87 VLRBCCFS N 16 3 Valor da Base do Cofins 997 1012         
            itPrVpdvBean.setAliqcfs(o.getAliqcfs());//88 ALIQCFS N 16 3 Aliquota de Cofins 1013 1028         
            itPrVpdvBean.setValorcfs(o.getValorcfs());//89 VALORCFS N 16 3 Valor do Cofins 1029 1044         
            itPrVpdvBean.setVlrcfsst(o.getVlrcfsst());//90 VLRCFSST N 16 3 Valor da ST do Cofins  1045 1060        
            itPrVpdvBean.setNumitemdav(o.getNumitemdav());//92 NUMITEMDAV N 6 Numero do item do DAV 1063 1068         
            itPrVpdvBean.setDatadamov(o.getDatadamov());//93 DATADAMOV  C 14 Data da Movimentação da ECF 1069 1082         
            itPrVpdvBean.setEcfseque(o.getEcfseque());//94 ECFSEQUE C 4 Sequencial do ECF da Loja 1083 1086         
            itPrVpdvBean.setEcfmarca(o.getEcfmarca());//95 ECFMARCA C 25 Marca ECF 1087 1111         
            itPrVpdvBean.setEcfmodelo(o.getEcfmodelo());//96 ECFMODELO C 25 Modelo ECF 1112 1136          
            itPrVpdvBean.setEcftipo(o.getEcftipo());//97 ECFTIPO C 15 Tipo do ECF 1137 1151         
            itPrVpdvBean.setSwbversao(o.getSwbversao());//98 SWBVERSAO C 10 Versão do Soft.Básico da ECF 1152 1161        
            itPrVpdvBean.setSwbdthrgr(o.getSwbdthrgr());//99 SWBDTHRGR D 8 Data da Versão do Soft.Básico da ECF 1162 1169  
            itPrVpdvBean.setSwbmfadic(o.getSwbmfadic());//100 SWBMFADIC C 1 MF adicional 1170 1170         
            itPrVpdvBean.setArcodigo(o.getArcodigo());

            itPrVpdvBean.setDadomaqu(o.getDadomaqu());//103 DADOMAQU C 30 Reservado não utilizado 1182 1211
            itPrVpdvBean.setHorapedi(o.getHorapedi());
            itPrVpdvBean.setDesccomp(o.getDesccomp());
            itPrVpdvBean.setQtdmedsolic(0.0);
            itPrVpdvBean.setQtdmedautor(0.0);
            itPrVpdvBean.setStsproc("");
            itPrVpdvBean.setMsgproc("");

            listaItPrVpdvBean.add(itPrVpdvBean);
        }

        return listaItPrVpdvBean;
    }

    private void cancelar() {
        dispose();
    }

}
